{"version":3,"sources":["Containers/LogoContainer.js","Components/HeaderComponent.js","Containers/StoryTitle.js","Containers/StoryContent.js","Containers/TitleDivContainer.js","Components/StoryComponent.js","Containers/ThemeIcon.js","Components/ThemeComponent.js","Components/CalendarComponent.js","Containers/HeartContainer.js","Containers/GitContainer.js","Components/FooterComponent.js","Components/InputComponent.js","Components/PreviewComponent.js","Components/OutputHeaderComponent.js","Components/OutputComponent.js","App.js","index.js"],"names":["LogoContainer","className","width","height","viewBox","fill","xmlns","d","HeaderComponent","href","style","marginLeft","StoryTitle","title","StoryContent","subtitle1","subtitle2","para1","para2","marginTop","TitleDivContainer","text","id","StoryComponent","story_title","backgroundColor","minHeight","paddingLeft","ThemeIcon","theme","selectedIndex","setSelectedIndex","monthNames","name","display","flexDirection","paddingTop","index","onClick","version","x","y","enableBackground","color","transform","flex","Date","availability","start","getDate","startDate","getMonth","substr","getStartMonth","end","endDate","getEndMonth","ThemeComponent","all_themes","date","content","getCurrentTheme","showMessage","message","document","getElementById","innerHTML","setTimeout","replace","zIndex","colorSecondary","transition","marginRight","map","to","maxHeight","e","undefined","preventDefault","handleClick","CalendarComponent","setParentContent","setDate","availableThemes","modifiers","highlight","getDay","paddingBottom","onDateChange","val","locale","enGB","modifiersClassNames","inputProps","focused","value","border","placeholder","htmlFor","onChange","nativeEvent","target","getValue","spellCheck","rows","HeartContainer","GitContainer","url","all","fillRule","clipRule","FooterComponent","fontSize","fontFamily","fontWeight","InputComponent","setParentDate","setContent","PreviewComponent","selectedTheme","format","marginBottom","minWidth","OutputHeaderComponent","OutputComponent","props","Theme","_obj","this","toString","filterValidDates","themes","filter","dateDate","App","useState","currentIndex","setCurrentIndex","exact","path","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f8c41fb0.chunk.js","sourcesContent":["import React from \"react\";\n\n// Logo svg\nexport default function LogoContainer() {\n    return (\n        <div className=\"d-flex align-items-center\">\n            <svg width=\"428\" height=\"135\" viewBox=\"0 0 428 135\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path\n                    d=\"M63.9891 21.3822C63.674 21.1346 63.3365 20.887 62.9988 20.6619C63.2914 20.5944 63.5614 20.5493 63.8541 20.5042C65.047 20.3241 66.2625 20.2115 67.5004 20.2115C67.9281 20.2115 68.3558 20.2339 68.7608 20.2339C68.5132 20.0538 68.2656 19.8737 68.018 19.6937C67.8379 19.7612 67.6805 19.8287 67.5004 19.8962C66.8476 19.6486 66.195 19.401 65.5197 19.1985C65.1822 19.0859 64.8445 18.996 64.507 18.9058C64.1695 18.8156 63.8093 18.7257 63.4715 18.6582C63.0889 18.5683 62.6837 18.4781 62.3011 18.4106C60.7256 18.1179 59.1275 17.9605 57.4846 17.9605C55.9316 17.9605 54.4009 18.0955 52.9381 18.3658C52.4429 18.4333 51.9477 18.5459 51.475 18.6585C50.4622 18.8837 49.4943 19.1761 48.549 19.5138C48.3014 19.5813 48.0762 19.6715 47.8513 19.7614C47.6488 19.8513 47.4463 19.9191 47.2663 20.009C47.0862 20.0765 46.9061 20.144 46.726 20.2342C46.9061 20.2118 47.0635 20.2118 47.2436 20.2118H47.7163C48.0765 20.2118 48.4367 20.2342 48.7742 20.2569C49.0893 20.2793 49.4044 20.3019 49.7195 20.3468C50.0345 20.3692 50.372 20.4143 50.6874 20.4594C52.8482 20.7969 54.8964 21.4273 56.7869 22.3499C56.8544 22.395 56.9446 22.4174 57.0121 22.4625C57.0345 22.4625 57.0345 22.4625 57.0345 22.4625H57.4846C57.9574 22.4625 58.4074 22.4849 58.8799 22.5076C58.9925 22.5076 59.1051 22.53 59.195 22.53C59.5776 22.5524 59.9602 22.5975 60.3204 22.6426C60.5229 22.665 60.703 22.6876 60.9055 22.7325C61.7157 22.8451 62.526 23.0251 63.3138 23.2501C63.7191 23.3626 64.1017 23.4526 64.4843 23.5876C65.4746 23.9026 66.4423 24.3079 67.3652 24.758V24.7804C67.4551 24.8028 67.5228 24.8479 67.6128 24.893C67.6803 24.9154 67.7478 24.9381 67.8153 24.9829C66.6448 23.678 65.3845 22.4625 63.9891 21.3822ZM94.2842 23.8354C92.7312 10.6236 81.5449 0.360176 68.2205 0.0224121C67.9729 0 67.7478 0 67.5002 0C63.6289 0 59.9602 0.810264 56.629 2.27338C55.7061 2.67864 54.8059 3.12873 53.9506 3.64632C52.6227 4.38908 51.3848 5.26685 50.2144 6.23479C50.1693 6.27987 50.1245 6.30229 50.0794 6.34737C46.9509 8.95825 44.4299 12.2895 42.8094 16.0932V16.1156C42.6744 16.4083 42.5394 16.7234 42.4268 17.0158C42.4044 17.0609 42.4044 17.0833 42.3817 17.1284C41.8641 18.4114 41.4589 19.7617 41.1662 21.1346C40.941 22.0348 40.806 22.9352 40.6934 23.8581C40.5584 23.9707 40.4008 24.0833 40.2658 24.2183C40.2207 24.2633 40.1758 24.2858 40.1308 24.3309C36.7096 27.1893 33.9862 30.9255 32.3432 35.157L32.3208 35.1794C31.1279 38.1952 30.4751 41.5041 30.4751 44.97C30.4751 49.7417 31.7581 54.4008 34.1214 58.4745C35.0443 60.095 36.1472 61.603 37.4076 62.9759C37.7677 63.4036 38.1727 63.8086 38.578 64.2139L39.0057 65.2266L40.8962 69.728L50.5068 92.6857L53.0952 98.8303L61.4681 118.84L63.6289 123.971L63.9891 124.849L64.0566 125.007L66.5776 131.016L67.6805 133.627C68.018 134.46 68.851 135 69.7511 135H69.8186C70.7415 134.978 71.5517 134.37 71.8668 133.492L96.4674 64.169C101.577 59.1274 104.525 52.1725 104.525 44.97C104.525 36.417 100.519 28.7872 94.2842 23.8354ZM47.3335 16.9931C47.5136 16.6105 47.6937 16.2279 47.9186 15.8678C47.9861 15.7328 48.0536 15.5978 48.1438 15.4625C48.3463 15.1023 48.5714 14.7648 48.819 14.4271C49.0442 14.0445 49.3142 13.6619 49.6293 13.3017C49.8318 12.9866 50.0794 12.6715 50.3496 12.3789C51.0249 11.591 51.745 10.8483 52.5104 10.1733C52.8479 9.88058 53.1857 9.58816 53.5232 9.34058C53.7708 9.13808 54.0184 8.93531 54.2884 8.75549C54.3783 8.68799 54.4684 8.62049 54.5584 8.5754C54.8284 8.3729 55.0986 8.17014 55.391 8.01272C56.0212 7.58505 56.6965 7.22487 57.3717 6.88737C57.8218 6.6622 58.2946 6.43728 58.7671 6.23479C58.8122 6.21237 58.857 6.1897 58.9248 6.16728C59.4424 5.96479 59.9375 5.7847 60.4778 5.62702C60.9506 5.44693 61.4457 5.31193 61.9633 5.19935C62.5484 5.04167 63.1562 4.90667 63.7639 4.81676H63.7863C64.3941 4.72685 65.0019 4.63667 65.632 4.59158C66.2398 4.52408 66.87 4.50167 67.5002 4.50167C67.9953 4.50167 68.4905 4.52408 68.963 4.54676C69.233 4.56917 69.5033 4.59185 69.7509 4.61426C70.246 4.65935 70.7412 4.72685 71.214 4.81676C71.619 4.88426 72.0242 4.95176 72.4068 5.06435C72.5418 5.08676 72.6995 5.10943 72.8345 5.15426C73.1045 5.22176 73.3521 5.28926 73.6224 5.35676C73.8924 5.44667 74.1399 5.51443 74.4102 5.60435C74.6354 5.67185 74.8379 5.73935 75.0404 5.82952C76.0758 6.1897 77.0886 6.63979 78.0563 7.15737C78.529 7.40496 78.9791 7.67496 79.4068 7.96764C79.4967 8.01272 79.5869 8.05755 79.6768 8.12531C80.1269 8.41799 80.5546 8.7104 80.9598 9.02549C83.2556 10.7586 85.2136 12.8967 86.7218 15.3726C86.9243 15.6877 87.1044 16.0252 87.2845 16.3629C87.6447 17.0382 87.9822 17.7135 88.2749 18.4336C88.3875 18.6812 88.5 18.9512 88.59 19.2214C88.77 19.6715 88.9275 20.1216 89.0627 20.5944C87.2621 19.739 85.394 19.0864 83.4133 18.6363C83.0531 18.5464 82.6929 18.4787 82.3104 18.4112C81.9502 18.3437 81.5676 18.2762 81.2074 18.2311C80.8248 18.1636 80.4422 18.1185 80.0821 18.0961C79.6995 18.051 79.3169 18.0286 78.9343 18.0062C78.5066 17.9837 78.0789 17.9611 77.6289 17.9611H77.5163C76.841 17.9611 76.1433 17.9835 75.4681 18.051C75.288 18.051 75.1079 18.0734 74.9278 18.0961C74.4326 18.1412 73.9599 18.186 73.4874 18.2537C73.1272 18.3212 72.767 18.3887 72.4071 18.4562C72.092 18.5237 71.7769 18.5912 71.4618 18.6587C70.2914 18.9287 69.1436 19.2665 68.0183 19.6942C67.8382 19.7617 67.6808 19.8292 67.5007 19.8967C66.8478 19.6491 66.1953 19.4015 65.52 19.199C65.1825 19.0864 64.8447 18.9965 64.5072 18.9063C64.1697 18.8162 63.8096 18.7262 63.4718 18.6587C63.0892 18.5688 62.6839 18.4787 62.3013 18.4112C60.7259 18.1185 59.1278 17.9611 57.4849 17.9611C55.9318 17.9611 54.4012 18.0961 52.9384 18.3663C52.4432 18.4338 51.948 18.5464 51.4752 18.659C50.4625 18.8842 49.4945 19.1766 48.5493 19.5144C48.3017 19.5819 48.0765 19.672 47.8516 19.7619C47.6491 19.8519 47.4466 19.9196 47.2665 20.0095C47.0864 20.077 46.9063 20.1445 46.7262 20.2347C46.4562 20.3473 46.186 20.4599 45.916 20.5949C46.2756 19.334 46.7481 18.1412 47.3335 16.9931ZM40.4461 59.6223C40.1534 59.2848 39.861 58.9246 39.5908 58.5644C39.5457 58.542 39.5233 58.5193 39.5008 58.4745C39.2082 58.0919 38.9382 57.7093 38.6906 57.3041C38.5329 57.1016 38.4206 56.8988 38.308 56.6963C38.038 56.291 37.7904 55.8636 37.5652 55.4584C37.5652 55.436 37.5652 55.436 37.5652 55.436C37.2726 54.8957 37.025 54.3781 36.7774 53.8378C36.7774 53.8154 36.7774 53.8154 36.7774 53.7928C36.5298 53.2525 36.3273 52.6898 36.1472 52.1271C35.9447 51.5645 35.787 51.0018 35.6296 50.4167C35.4946 49.8316 35.3596 49.2238 35.2694 48.6161C35.2019 48.1433 35.1344 47.6708 35.0894 47.1756C35.0669 46.9505 35.0443 46.7256 35.0219 46.478C34.9994 45.9828 34.9768 45.4652 34.9768 44.97C34.9768 44.2049 35.0219 43.4394 35.0894 42.6742C35.1344 42.2916 35.1793 41.9315 35.247 41.5489C35.2694 41.3237 35.3145 41.0988 35.3596 40.8963C35.4047 40.6263 35.4495 40.356 35.5173 40.1084C36.215 36.9349 37.5655 34.0313 39.456 31.5106C39.8837 30.9255 40.3562 30.3629 40.829 29.845C41.3692 29.2373 41.9543 28.6746 42.5621 28.1346C42.8772 27.8419 43.2147 27.5719 43.5524 27.3019C44.3403 26.6941 45.1505 26.1315 46.0056 25.6363C46.2308 25.4786 46.4784 25.3436 46.7033 25.231C46.9285 25.096 47.1761 24.961 47.4237 24.8484C48.9991 24.0606 50.6647 23.4531 52.4202 23.0478C52.8479 22.9352 53.2756 22.8677 53.7033 22.8002C53.8159 22.7551 53.9509 22.7327 54.0634 22.7327C54.5362 22.6428 55.0314 22.5977 55.5039 22.5526C56.0215 22.5076 56.5393 22.4851 57.0569 22.4851V22.4627H57.4846C57.9574 22.4627 58.4074 22.4851 58.8799 22.5078C58.9925 22.5078 59.1051 22.5302 59.195 22.5302C59.5776 22.5526 59.9602 22.5977 60.3204 22.6428C60.5229 22.6652 60.703 22.6879 60.9055 22.7327C61.7157 22.8453 62.526 23.0254 63.3138 23.2503C63.7191 23.3629 64.1017 23.4528 64.4843 23.5878C65.4746 23.9029 66.4423 24.3082 67.3652 24.7583V24.7807C67.4551 24.8031 67.5228 24.8482 67.6128 24.8933C67.6803 24.9157 67.7478 24.9383 67.8153 24.9832C67.9503 25.0507 68.0628 25.1182 68.1978 25.1857C68.6255 25.4108 69.0305 25.6584 69.4358 25.906C70.5611 26.6264 71.619 27.4366 72.6093 28.3144C72.8345 28.5169 73.0594 28.7197 73.2619 28.9446C73.7571 29.4398 74.2523 29.9573 74.7024 30.4976C74.995 30.8351 75.2426 31.1729 75.5126 31.5104C76.0529 32.2307 76.5481 32.9959 76.9982 33.7611C77.1782 34.0986 77.3583 34.4363 77.5384 34.7738C78.2812 36.2143 78.8663 37.7449 79.2715 39.3427C79.339 39.5903 79.4065 39.8379 79.4516 40.1079C79.7216 41.2333 79.8793 42.4037 79.9468 43.5966C79.9692 44.0466 79.9919 44.5194 79.9919 44.9695C79.9919 45.4647 79.9695 45.9823 79.9468 46.4774C79.9244 46.725 79.9017 46.9502 79.8793 47.1751C79.8342 47.6703 79.7667 48.1431 79.6992 48.6156C79.5191 49.6734 79.2939 50.7089 78.9789 51.6992C78.9114 51.9468 78.8212 52.172 78.7313 52.4196C78.5736 52.8923 78.3711 53.3648 78.191 53.8376C77.9434 54.3778 77.6958 54.8954 77.4032 55.4357C77.4032 55.4357 77.4032 55.4357 77.4032 55.4581C77.178 55.8634 76.9304 56.2908 76.6604 56.696C76.5478 56.8985 76.4352 57.1013 76.2778 57.3038C76.2778 57.3262 76.2554 57.3262 76.2554 57.3262C76.0078 57.7088 75.7378 58.0914 75.4451 58.474C75.265 58.744 75.0625 59.0142 74.8374 59.2618C74.4097 59.7794 73.982 60.2522 73.5095 60.7249H41.4589C41.099 60.365 40.7612 60.0051 40.4461 59.6223ZM69.5708 126.515L67.9953 122.779L66.3073 118.682L66.2398 118.547L65.9023 117.759L55.3238 92.5283L52.758 86.3837L45.758 69.728L43.8675 65.2266H91.3134L69.5708 126.515ZM99.911 47.1756C99.8659 47.7607 99.776 48.301 99.6858 48.8637C99.6634 49.0214 99.6407 49.1788 99.5959 49.3364C99.506 49.7865 99.4158 50.2366 99.3032 50.687C99.2808 50.7545 99.2581 50.822 99.2357 50.8895C99.078 51.4521 98.8982 52.0148 98.6954 52.5775C98.4703 53.1626 98.2454 53.7703 97.9751 54.333C97.7051 54.9181 97.4124 55.5035 97.0973 56.0437C96.8497 56.4714 96.6022 56.8991 96.3095 57.3041C96.242 57.4391 96.1745 57.5517 96.0619 57.6642C95.7017 58.2045 95.3191 58.7221 94.8915 59.2173C94.4862 59.7349 94.0137 60.23 93.5409 60.7252H79.3836C79.9012 60.0049 80.3964 59.2621 80.824 58.4745C83.2097 54.4008 84.4928 49.7417 84.4928 44.97C84.4928 44.2497 84.4704 43.5296 84.4029 42.8319C84.4029 42.7193 84.4028 42.6294 84.3804 42.5619C84.3353 42.1118 84.2905 41.6617 84.2228 41.2341C84.1777 40.8064 84.1102 40.3787 84.0203 39.9737C84.0203 39.9513 84.0203 39.9513 84.0203 39.9286C83.9077 39.411 83.7951 38.8932 83.6601 38.3756C83.6377 38.263 83.615 38.1504 83.5702 38.0381C83.4352 37.5205 83.3002 37.0027 83.1201 36.4851V36.4627C82.94 35.9224 82.7375 35.4048 82.5123 34.8872C82.4448 34.6396 82.3322 34.4145 82.2197 34.1669C81.4318 32.3662 80.4641 30.6782 79.2937 29.1028C78.9562 28.6527 78.6184 28.2026 78.2582 27.7749C78.1006 27.5498 77.9207 27.3473 77.718 27.1448C76.75 26.0418 75.6922 25.0291 74.5668 24.1062C74.0717 23.6785 73.5541 23.2735 73.0138 22.9133C73.2614 22.8683 73.5314 22.8234 73.779 22.7783C74.3867 22.6658 74.9945 22.5983 75.602 22.5532C76.1647 22.5081 76.7049 22.4633 77.2676 22.4633C77.29 22.4633 77.29 22.4633 77.29 22.4633H77.5152C77.988 22.4633 78.4832 22.4857 78.9557 22.5083C78.9781 22.5083 78.9781 22.5083 78.9781 22.5083C79.3607 22.5308 79.7432 22.5758 80.1258 22.6209C80.6661 22.6884 81.2061 22.7559 81.7239 22.8685C82.0614 22.9136 82.3992 23.0035 82.7367 23.0937C83.0294 23.1388 83.277 23.2063 83.547 23.2962C83.817 23.3637 84.0872 23.4539 84.3796 23.5438C84.8524 23.6788 85.3249 23.8589 85.775 24.0614C86.2478 24.2415 86.7203 24.444 87.193 24.6691C87.4182 24.7591 87.6207 24.8716 87.8232 24.9842V25.0066C87.9582 25.0517 88.0932 25.1192 88.2285 25.1867C89.3538 25.7945 90.4341 26.5146 91.4471 27.3024C91.8524 27.6399 92.2574 27.9777 92.64 28.3152L92.7075 28.3827C93.09 28.7429 93.4726 29.103 93.8328 29.4856C93.9454 29.5982 94.058 29.7332 94.1703 29.8458C94.4403 30.1385 94.733 30.476 94.9806 30.7911C95.9258 31.9388 96.7361 33.1995 97.4338 34.5049C97.5688 34.7301 97.6814 34.9777 97.794 35.2252C98.5143 36.7108 99.077 38.3089 99.4596 39.9518C99.5495 40.312 99.6172 40.6722 99.6621 41.0548C99.7072 41.2124 99.7296 41.3699 99.752 41.5499C99.7744 41.6849 99.7971 41.8426 99.8195 42C99.8646 42.3602 99.9094 42.7204 99.9321 43.0803C99.9545 43.1478 99.9545 43.2153 99.9545 43.3055C99.9996 43.8681 100.022 44.4084 100.022 44.9711C100.022 45.6013 99.9996 46.2541 99.9321 46.8616C99.9334 46.9731 99.9334 47.0857 99.911 47.1756ZM67.3201 60.7252C66.9599 61.1305 66.5997 61.5355 66.1947 61.9181L65.0243 65.2266H65.7446C66.4423 64.5063 67.0952 63.7635 67.7027 62.9759C68.2429 62.2556 68.7605 61.5128 69.2106 60.7252H67.3201ZM73.5098 60.7252H69.2109C68.7608 61.5131 68.2429 62.2558 67.7029 62.9759C67.0952 63.7638 66.4426 64.5065 65.7449 65.2266H71.6192C72.1368 64.5063 72.632 63.7411 73.0597 62.9759C73.7574 61.7831 74.3651 60.5451 74.8379 59.2621C74.41 59.78 73.9823 60.2527 73.5098 60.7252Z\"\n                    fill=\"black\"/>\n                <path\n                    d=\"M89.0625 20.5942C87.2618 19.7388 85.3937 19.0862 83.413 18.6361C79.4292 11.3662 72.2043 6.09932 63.7866 4.81655C65.0021 4.61405 66.2398 4.50146 67.5004 4.50146C77.5611 4.5012 86.2488 11.276 89.0625 20.5942Z\"\n                    fill=\"#AD1457\"/>\n                <path\n                    d=\"M83.4126 18.6362C81.5445 18.2086 79.6313 17.961 77.6282 17.961H77.5156C74.0494 17.961 70.6733 18.6362 67.4997 19.8966C64.3937 18.6587 61.0176 17.961 57.4839 17.961C53.3424 17.961 49.4261 18.9289 45.915 20.5943C47.1079 16.4979 49.4261 12.8966 52.5097 10.1732C55.6158 7.40461 59.487 5.51408 63.7635 4.81641H63.7859C72.2039 6.09943 79.4288 11.3663 83.4126 18.6362Z\"\n                    fill=\"#D81B60\"/>\n                <path\n                    d=\"M100.024 44.97C100.024 45.6002 100.001 46.2531 99.9336 46.8606C99.9336 46.9732 99.9336 47.0857 99.9112 47.1757C99.8661 47.7607 99.7762 48.301 99.6861 48.8637C99.6636 49.0214 99.641 49.1788 99.5961 49.3364C99.5062 49.7865 99.4161 50.2366 99.3035 50.687C99.2811 50.7545 99.2584 50.822 99.236 50.8895C99.0783 51.4521 98.8985 52.0148 98.6957 52.5775C98.268 53.7703 97.7278 54.9408 97.0976 56.0437C96.85 56.4714 96.6024 56.8991 96.3097 57.3041C96.2422 57.4391 96.1747 57.5517 96.0621 57.6643C95.702 58.2045 95.3194 58.7221 94.8917 59.2173C94.4867 59.7349 94.0139 60.23 93.5412 60.7252H87.5767C88.0043 60.2751 88.3869 59.8024 88.7471 59.3299C90.39 57.2366 91.6955 54.9408 92.641 52.4652C93.8565 49.3815 94.5091 46.073 94.5091 42.7193C94.5091 35.9445 91.9882 29.7324 87.8245 25.0059C87.9595 25.0509 88.0945 25.1184 88.2295 25.1859C89.3549 25.7937 90.4351 26.5138 91.4482 27.3017C91.8532 27.6392 92.2584 27.9769 92.641 28.3144L92.7085 28.3819C93.0911 28.7421 93.4737 29.1023 93.8339 29.4849C93.9464 29.5974 94.059 29.7324 94.1714 29.845C94.4414 30.1377 94.734 30.4752 94.9816 30.7903C95.9269 31.9381 96.7371 33.1987 97.4348 34.5041C97.5698 34.7293 97.6824 34.9769 97.795 35.2245C98.5153 36.71 99.078 38.3081 99.4606 39.951C99.5505 40.3112 99.6183 40.6714 99.6631 41.054C99.7082 41.2117 99.7306 41.3691 99.753 41.5492C99.7754 41.6842 99.7981 41.8418 99.8205 41.9992C99.8656 42.3594 99.9104 42.7196 99.9331 43.0795C99.9555 43.147 99.9555 43.2145 99.9555 43.3047C100.001 43.8671 100.024 44.4074 100.024 44.97Z\"\n                    fill=\"#BDBDBD\"/>\n                <path\n                    d=\"M87.8241 25.006C91.988 29.7325 94.5087 35.9447 94.5087 42.7194C94.5087 46.0731 93.8561 49.3816 92.6406 52.4653C91.6954 54.9412 90.3899 57.237 88.7467 59.33C88.3865 59.8027 88.004 60.2752 87.5763 60.7253H79.3835C79.9011 60.005 80.3962 59.2622 80.8239 58.4746C83.2096 54.4009 84.4926 49.7418 84.4926 44.9701C84.4926 44.2498 84.4702 43.5297 84.4027 42.832C84.4027 42.7194 84.4027 42.6295 84.3803 42.562C84.3352 42.1119 84.2904 41.6619 84.2226 41.2342C84.1775 40.8065 84.11 40.3788 84.0201 39.9738C84.0201 39.9514 84.0201 39.9514 84.0201 39.9287C83.9075 39.4112 83.795 38.8933 83.66 38.3757C83.6375 38.2631 83.6149 38.1505 83.57 38.0382C83.435 37.5206 83.3 37.0028 83.12 36.4852V36.4628C82.9399 35.9225 82.7374 35.4049 82.5122 34.8873C82.4447 34.6397 82.3321 34.4146 82.2195 34.167C81.4317 32.3664 80.464 30.6783 79.2936 29.1029C78.9785 28.6528 78.641 28.2027 78.2581 27.775C78.1004 27.5499 77.9206 27.3474 77.7178 27.1449C76.7499 26.0419 75.6921 25.0292 74.5667 24.1063C74.0715 23.6786 73.5539 23.2961 73.0137 22.9135C73.2613 22.8684 73.5313 22.8236 73.7788 22.7785C74.3866 22.6659 74.9944 22.5984 75.6019 22.5533C76.1646 22.5082 76.7048 22.4634 77.2675 22.4634C77.2899 22.4634 77.2899 22.4634 77.2899 22.4634H77.5151C77.9878 22.4634 78.483 22.4858 78.9555 22.5085C78.9779 22.5085 78.9779 22.5085 78.9779 22.5085C79.3605 22.5309 79.7431 22.576 80.1257 22.6211C80.666 22.6886 81.206 22.7561 81.7238 22.8686C82.0613 22.9137 82.3991 23.0036 82.7366 23.0938C83.0293 23.1389 83.2768 23.2064 83.5468 23.2963C83.8168 23.3638 84.0871 23.454 84.3795 23.5439C84.8523 23.6789 85.3248 23.859 85.7749 24.0615C86.2476 24.2416 86.7201 24.4441 87.1929 24.6693C87.4181 24.7592 87.6206 24.8718 87.8231 24.9843C87.9581 25.0294 88.0931 25.1193 88.2283 25.1868C88.0941 25.1186 87.9591 25.0511 87.8241 25.006Z\"\n                    fill=\"#F4F4F4\"/>\n                <path\n                    d=\"M97.0972 56.0439C97.7273 54.9409 98.2676 53.7705 98.6953 52.5776C98.2676 53.7705 97.7498 54.9409 97.0972 56.0439Z\"\n                    fill=\"#F4F4F4\"/>\n                <path\n                    d=\"M79.9919 44.9701C79.9919 45.4653 79.9695 45.9828 79.9468 46.478C79.9244 46.7256 79.9017 46.9508 79.8793 47.1757C79.8342 47.6709 79.7667 48.1436 79.6992 48.6161C79.5191 49.674 79.2942 50.7094 78.9789 51.6998C78.9114 51.9474 78.8212 52.1725 78.7313 52.4201C78.5736 52.8929 78.3711 53.3654 78.191 53.8382C77.9434 54.3784 77.6959 54.896 77.4032 55.4363C77.4032 55.4363 77.4032 55.4363 77.4032 55.4587C77.178 55.8639 76.9304 56.2914 76.6604 56.6966C76.5478 56.8991 76.4352 57.1019 76.2778 57.3044C76.2778 57.3268 76.2554 57.3268 76.2554 57.3268C76.0078 57.7094 75.7378 58.092 75.4451 58.4746C75.2651 58.7446 75.0626 59.0148 74.8374 59.2624C74.4097 59.78 73.982 60.2528 73.5095 60.7255H67.3198C67.7475 60.2754 68.1301 59.8027 68.4903 59.3302C70.1332 57.2369 71.4387 54.9411 72.3842 52.4655C73.5997 49.3818 74.2523 46.0733 74.2523 42.7196C74.2523 35.9449 71.7313 29.7327 67.5677 25.0062V24.9837C67.5002 24.9162 67.4551 24.8488 67.3652 24.7812C67.4551 24.8037 67.5229 24.8488 67.6128 24.8938C67.6803 24.9163 67.7478 24.9389 67.8153 24.9837C67.9503 25.0512 68.0629 25.1188 68.1979 25.1863C68.6255 25.4114 69.0305 25.659 69.4358 25.9066C70.5611 26.627 71.619 27.4372 72.6094 28.315C72.8345 28.5175 73.0594 28.7202 73.2619 28.9452C73.7571 29.4403 74.2523 29.9579 74.7024 30.4982C74.9951 30.8357 75.2426 31.1734 75.5126 31.5109C76.0529 32.2313 76.5481 32.9965 76.9982 33.7617C77.1783 34.0992 77.3584 34.4369 77.5384 34.7744C78.2812 36.2149 78.8663 37.7455 79.2716 39.3433C79.3391 39.5909 79.4066 39.8385 79.4516 40.1085C79.7216 41.2338 79.8793 42.4043 79.9468 43.5971C79.9692 44.0472 79.9919 44.52 79.9919 44.9701Z\"\n                    fill=\"#6D4C41\"/>\n                <path\n                    d=\"M74.2523 42.7195C74.2523 46.0731 73.5997 49.3817 72.3842 52.4653C71.4389 54.9412 70.1335 57.237 68.4903 59.33C68.1301 59.8028 67.7475 60.2753 67.3199 60.7254H41.4587C41.0985 60.3652 40.761 60.005 40.4459 59.6224C40.1532 59.2849 39.8608 58.9248 39.5906 58.5646C39.5455 58.5422 39.5231 58.5195 39.5006 58.4747C39.208 58.0921 38.938 57.7095 38.6904 57.3042C38.5327 57.1017 38.4204 56.899 38.3078 56.6965C38.0378 56.2912 37.7902 55.8638 37.565 55.4585C37.565 55.4361 37.565 55.4361 37.565 55.4361C37.2724 54.8958 37.0248 54.3783 36.7772 53.838C36.7772 53.8156 36.7772 53.8156 36.7772 53.7929C36.5296 53.2526 36.3271 52.69 36.147 52.1273C35.9445 51.5646 35.7868 51.0019 35.6294 50.4169C35.4944 49.8318 35.3594 49.224 35.2692 48.6162C35.2017 48.1435 35.1342 47.671 35.0892 47.1758C35.0667 46.9506 35.0441 46.7257 35.0217 46.4781C34.9992 45.9829 34.9766 45.4654 34.9766 44.9702C34.9766 44.205 35.0217 43.4396 35.0892 42.6744C35.1342 42.2918 35.1791 41.9316 35.2468 41.549C35.2692 41.3239 35.3143 41.099 35.3594 40.8965C35.4045 40.6265 35.4493 40.3562 35.5171 40.1086C36.2148 36.935 37.5653 34.0315 39.4558 31.5108C39.8835 30.9257 40.356 30.363 40.8288 29.8452C41.369 29.2374 41.9541 28.6747 42.5619 28.1347C42.877 27.8421 43.2145 27.5721 43.5522 27.3021C44.3401 26.6943 45.1503 26.1316 46.0054 25.6364C46.2306 25.4788 46.4782 25.3438 46.7031 25.2312C46.9283 25.0962 47.1759 24.9612 47.4235 24.8486C48.9989 24.0607 50.6645 23.4532 52.42 23.048C52.8477 22.9354 53.2754 22.8679 53.7031 22.8004C53.8156 22.7553 53.9506 22.7329 54.0632 22.7329C54.536 22.643 55.0312 22.5979 55.5037 22.5528C55.9989 22.5077 56.494 22.4853 57.0116 22.4629C57.034 22.4629 57.034 22.4629 57.034 22.4629H57.4841C57.9569 22.4629 58.407 22.4853 58.8795 22.508C58.9921 22.508 59.1046 22.5304 59.1946 22.5304C59.5771 22.5528 59.9597 22.5979 60.3199 22.643C60.5224 22.6654 60.7025 22.6881 60.905 22.7329C61.7153 22.8455 62.5255 23.0256 63.3134 23.2505C63.7186 23.3631 64.1012 23.453 64.4838 23.588C65.4742 23.9031 66.4418 24.3083 67.3647 24.7584C67.4322 24.7808 67.5224 24.8259 67.6123 24.8934C67.5224 24.8483 67.4546 24.8035 67.3647 24.7808C67.4546 24.8483 67.4997 24.9158 67.5672 24.9833V25.0057C71.7314 29.7326 74.2523 35.9447 74.2523 42.7195Z\"\n                    fill=\"#8D6E63\"/>\n                <path\n                    d=\"M91.313 65.2266L69.5706 126.515L67.9951 122.778L66.3071 118.682L66.2396 118.547L65.9019 117.759L85.2583 65.2266H91.313Z\"\n                    fill=\"#F9A825\"/>\n                <path d=\"M65.9023 117.759L66.2401 118.547L65.9023 117.782V117.759Z\" fill=\"#FFC107\"/>\n                <path d=\"M66.3072 118.682L67.9953 122.778L66.2397 118.547L66.3072 118.682Z\" fill=\"#FFC107\"/>\n                <path d=\"M85.2584 65.2266L65.902 117.759L55.3235 92.5282L45.7577 69.7282L43.8672 65.2266H85.2584Z\"\n                      fill=\"#FFC107\"/>\n                <path\n                    d=\"M65.8638 92.2362C65.0625 92.2362 64.286 91.8064 63.8786 91.0499L56.5142 77.3406C55.9247 76.2466 56.3365 74.8805 57.4302 74.293C58.5308 73.7035 59.8903 74.1174 60.4777 75.2114L67.8421 88.9208C68.4317 90.0147 68.0198 91.3808 66.9261 91.9683C66.5886 92.1505 66.2239 92.2362 65.8638 92.2362Z\"\n                    fill=\"#F9A825\"/>\n                <path\n                    d=\"M59.1114 87.7345C58.3731 87.7345 57.6507 87.3722 57.2185 86.7059C56.5433 85.6615 56.8425 84.2682 57.8869 83.593L75.2808 72.3392C76.3229 71.6618 77.7161 71.9632 78.3937 73.0055C79.069 74.0499 78.7697 75.4431 77.7253 76.1184L60.3314 87.3722C59.9531 87.6174 59.5322 87.7345 59.1114 87.7345Z\"\n                    fill=\"#F9A825\"/>\n                <path\n                    d=\"M139.256 76.752C140.323 76.6667 141.059 76.5387 141.464 76.368C141.869 76.176 142.136 75.8453 142.264 75.376C142.392 74.8853 142.456 74.032 142.456 72.816V58.864C140.643 58.928 139.405 59.0347 138.744 59.184C138.104 59.312 137.667 59.6213 137.432 60.112C137.197 60.5813 136.984 61.5093 136.792 62.896L135.288 63.024C135.544 60.9973 135.704 59.152 135.768 57.488L136.056 57.232L138.712 57.584H148.632L151.352 57.232L151.64 57.488C151.704 59.2373 151.864 61.04 152.12 62.896L150.616 63.024C150.381 61.616 150.147 60.6667 149.912 60.176C149.677 59.6853 149.261 59.3653 148.664 59.216C148.067 59.0667 146.915 58.9493 145.208 58.864C145.08 60.144 144.963 62.4053 144.856 65.648C144.749 68.8907 144.696 71.8133 144.696 74.416C144.696 75.2053 144.835 75.7707 145.112 76.112C145.389 76.432 145.859 76.592 146.52 76.592C147.16 76.592 147.747 76.56 148.28 76.496L148.376 76.624L148.088 78.096L147.032 78.064L143.384 78C142.211 78 140.749 78.0427 139 78.128L139.256 76.752ZM154.357 76.976C155.146 76.8267 155.679 76.6133 155.957 76.336C156.234 76.0373 156.373 75.536 156.373 74.832L156.405 64.656C156.405 64.1227 156.341 63.7707 156.213 63.6C156.085 63.408 155.829 63.312 155.445 63.312L154.581 63.344L154.485 63.216L154.677 62C154.89 62 155.285 62.0107 155.861 62.032C156.458 62.0533 157.055 62.064 157.653 62.064C158.143 62.064 158.73 62.032 159.413 61.968C160.095 61.904 160.543 61.8613 160.757 61.84L160.629 63.152C160.117 63.2373 159.754 63.344 159.541 63.472C159.327 63.5787 159.178 63.76 159.093 64.016C159.029 64.2507 158.975 64.6667 158.933 65.264L158.773 69.136L162.933 69.168C164.063 69.168 165.29 69.0933 166.613 68.944L166.645 64.656C166.645 64.1227 166.581 63.7707 166.453 63.6C166.325 63.408 166.069 63.312 165.685 63.312L164.789 63.344L164.725 63.216L164.917 62C165.109 62.0213 165.482 62.0427 166.037 62.064C166.591 62.064 167.135 62.064 167.669 62.064C168.181 62.064 168.799 62.032 169.525 61.968C170.271 61.904 170.762 61.8613 170.997 61.84L170.901 63.152C170.239 63.2373 169.802 63.376 169.589 63.568C169.375 63.7387 169.258 64.0693 169.237 64.56C169.151 66.2453 169.066 68.1333 168.981 70.224C168.917 72.2933 168.885 73.8933 168.885 75.024C168.885 75.7067 168.959 76.1653 169.109 76.4C169.258 76.6133 169.557 76.72 170.005 76.72C170.261 76.72 170.495 76.7093 170.709 76.688C170.922 76.6667 171.061 76.656 171.125 76.656L171.221 76.784L170.965 78.064C170.73 78.064 170.282 78.0533 169.621 78.032C168.981 78.0107 168.309 78 167.605 78L164.405 78.032L164.661 76.752C165.215 76.752 165.621 76.688 165.877 76.56C166.154 76.4107 166.346 76.1653 166.453 75.824C166.559 75.4613 166.613 74.928 166.613 74.224V70.64L162.933 70.608C162.591 70.608 161.898 70.6507 160.853 70.736C159.807 70.8 159.103 70.8427 158.741 70.864L158.645 75.024C158.645 75.7067 158.719 76.1653 158.869 76.4C159.018 76.6347 159.317 76.752 159.765 76.752C160.021 76.752 160.255 76.7413 160.469 76.72C160.682 76.6987 160.821 76.6773 160.885 76.656L160.949 76.784L160.725 78.064C160.554 78.064 160.223 78.0533 159.733 78.032C159.263 78.0107 158.762 78 158.229 78C157.439 78 156.575 78.032 155.637 78.096C154.698 78.16 154.218 78.224 154.197 78.288L154.357 76.976ZM174.794 76.912C175.584 76.8267 176.117 76.6347 176.394 76.336C176.672 76.0373 176.81 75.5253 176.81 74.8L176.842 64.656C176.842 64.1227 176.778 63.7707 176.65 63.6C176.522 63.408 176.266 63.312 175.882 63.312L175.018 63.344L174.954 63.216L175.146 62C175.402 62 175.904 62.0107 176.65 62.032C177.397 62.0533 178.208 62.064 179.082 62.064C182.645 62.064 185.28 61.968 186.986 61.776L187.082 61.936C187.04 62.1707 186.944 62.704 186.794 63.536C186.645 64.368 186.538 65.264 186.474 66.224L184.938 66.352C184.938 66.2667 184.949 66.128 184.97 65.936C184.992 65.7227 185.002 65.5093 185.002 65.296C185.002 64.7413 184.917 64.3573 184.746 64.144C184.597 63.9093 184.266 63.76 183.754 63.696C183.264 63.6107 182.4 63.568 181.162 63.568C180.586 63.568 180.192 63.5893 179.978 63.632C179.765 63.6533 179.626 63.728 179.562 63.856C179.498 63.9627 179.456 64.176 179.434 64.496L179.242 69.04L181.866 69.072C182.25 69.072 182.816 69.04 183.562 68.976C184.309 68.8907 184.8 68.8373 185.034 68.816L185.162 68.976L184.778 70.64C184.544 70.64 184.074 70.6293 183.37 70.608C182.688 70.5867 181.962 70.576 181.194 70.576C180.597 70.576 179.925 70.6293 179.178 70.736C179.114 72.3573 179.082 73.8187 179.082 75.12C179.082 75.6107 179.114 75.952 179.178 76.144C179.264 76.336 179.434 76.464 179.69 76.528C179.968 76.592 180.416 76.624 181.034 76.624C182.421 76.624 183.413 76.56 184.01 76.432C184.608 76.304 185.024 76.048 185.258 75.664C185.514 75.2587 185.717 74.576 185.866 73.616L187.274 73.488L187.402 73.648C187.338 73.8827 187.221 74.4373 187.05 75.312C186.901 76.1653 186.784 77.0613 186.698 78L186.506 78.16C185.93 78.1387 184.736 78.1067 182.922 78.064C181.109 78.0213 179.637 78 178.506 78C177.632 78 176.821 78.032 176.074 78.096C175.328 78.1813 174.848 78.2347 174.634 78.256L174.794 76.912ZM197.484 76.912C198.487 76.72 199.159 76.4427 199.5 76.08C199.863 75.696 200.044 75.056 200.044 74.16L200.076 60.72C200.076 60.0373 199.991 59.5787 199.82 59.344C199.671 59.1093 199.361 58.992 198.892 58.992L197.548 59.056L197.484 58.928L197.708 57.52C198.049 57.52 198.316 57.5307 198.508 57.552L201.516 57.616C202.476 57.616 203.703 57.52 205.196 57.328L205.068 58.768C204.193 58.8747 203.596 59.056 203.276 59.312C202.977 59.5467 202.807 59.9733 202.764 60.592C202.636 63.088 202.529 65.7013 202.444 68.432C202.359 71.1413 202.316 73.136 202.316 74.416C202.316 75.2907 202.412 75.8773 202.604 76.176C202.796 76.4533 203.169 76.592 203.724 76.592C204.087 76.592 204.652 76.56 205.42 76.496L205.484 76.624L205.196 78.096C204.897 78.096 204.663 78.0853 204.492 78.064C202.999 78.0213 201.836 78 201.004 78C199.959 78 198.721 78.128 197.292 78.384L197.484 76.912ZM216.215 78.288C213.804 78.288 211.895 77.5947 210.487 76.208C209.079 74.8213 208.375 72.9333 208.375 70.544C208.375 68.8587 208.759 67.3547 209.527 66.032C210.316 64.688 211.404 63.6427 212.791 62.896C214.199 62.1493 215.788 61.776 217.559 61.776C218.199 61.776 218.86 61.8187 219.543 61.904C220.247 61.9893 220.833 62.0853 221.303 62.192C221.793 62.2987 222.103 62.3627 222.231 62.384L222.359 62.576C222.337 62.6827 222.284 62.9387 222.199 63.344C222.113 63.728 222.017 64.24 221.911 64.88C221.804 65.52 221.729 66.2027 221.687 66.928L220.087 67.024C220.087 66.96 220.097 66.8107 220.119 66.576C220.14 66.3413 220.151 66.0747 220.151 65.776C220.151 64.2827 218.956 63.536 216.567 63.536C214.903 63.536 213.591 64.0907 212.631 65.2C211.671 66.288 211.191 67.792 211.191 69.712C211.191 71.8453 211.692 73.5413 212.695 74.8C213.719 76.0587 215.084 76.688 216.791 76.688C217.921 76.688 218.817 76.3893 219.479 75.792C220.161 75.1733 220.652 74.2133 220.951 72.912L222.551 72.784C222.487 73.04 222.369 73.616 222.199 74.512C222.049 75.408 221.943 76.2507 221.879 77.04L221.687 77.296C221.559 77.3387 221.249 77.4453 220.759 77.616C220.289 77.7653 219.649 77.9147 218.839 78.064C218.028 78.2133 217.153 78.288 216.215 78.288ZM226.013 76.912C226.802 76.8267 227.336 76.6347 227.613 76.336C227.89 76.0373 228.029 75.5253 228.029 74.8L228.061 64.656C228.061 64.1227 227.997 63.7707 227.869 63.6C227.741 63.408 227.485 63.312 227.101 63.312L226.237 63.344L226.173 63.216L226.365 62C226.621 62 227.122 62.0107 227.869 62.032C228.616 62.0533 229.426 62.064 230.301 62.064C233.864 62.064 236.498 61.968 238.205 61.776L238.301 61.936C238.258 62.1707 238.162 62.704 238.013 63.536C237.864 64.368 237.757 65.264 237.693 66.224L236.157 66.352C236.157 66.2667 236.168 66.128 236.189 65.936C236.21 65.7227 236.221 65.5093 236.221 65.296C236.221 64.7413 236.136 64.3573 235.965 64.144C235.816 63.9093 235.485 63.76 234.973 63.696C234.482 63.6107 233.618 63.568 232.381 63.568C231.805 63.568 231.41 63.5893 231.197 63.632C230.984 63.6533 230.845 63.728 230.781 63.856C230.717 63.9627 230.674 64.176 230.653 64.496L230.461 69.04L233.085 69.072C233.469 69.072 234.034 69.04 234.781 68.976C235.528 68.8907 236.018 68.8373 236.253 68.816L236.381 68.976L235.997 70.64C235.762 70.64 235.293 70.6293 234.589 70.608C233.906 70.5867 233.181 70.576 232.413 70.576C231.816 70.576 231.144 70.6293 230.397 70.736C230.333 72.3573 230.301 73.8187 230.301 75.12C230.301 75.6107 230.333 75.952 230.397 76.144C230.482 76.336 230.653 76.464 230.909 76.528C231.186 76.592 231.634 76.624 232.253 76.624C233.64 76.624 234.632 76.56 235.229 76.432C235.826 76.304 236.242 76.048 236.477 75.664C236.733 75.2587 236.936 74.576 237.085 73.616L238.493 73.488L238.621 73.648C238.557 73.8827 238.44 74.4373 238.269 75.312C238.12 76.1653 238.002 77.0613 237.917 78L237.725 78.16C237.149 78.1387 235.954 78.1067 234.141 78.064C232.328 78.0213 230.856 78 229.725 78C228.85 78 228.04 78.032 227.293 78.096C226.546 78.1813 226.066 78.2347 225.853 78.256L226.013 76.912ZM257.567 78.384C255.647 78.384 253.961 77.9787 252.511 77.168C251.06 76.3573 249.94 75.216 249.151 73.744C248.383 72.2507 247.999 70.5013 247.999 68.496C247.999 66.3627 248.479 64.4427 249.439 62.736C250.399 61.008 251.721 59.664 253.407 58.704C255.113 57.7227 257.033 57.232 259.167 57.232C259.956 57.232 260.756 57.296 261.567 57.424C262.399 57.5307 263.092 57.648 263.647 57.776C264.223 57.8827 264.585 57.9573 264.735 58L264.863 58.192C264.82 58.32 264.745 58.6293 264.639 59.12C264.553 59.6107 264.447 60.2507 264.319 61.04C264.212 61.8293 264.127 62.6613 264.063 63.536L262.527 63.664C262.548 63.5573 262.569 63.3653 262.591 63.088C262.612 62.7893 262.623 62.4587 262.623 62.096C262.623 60.112 261.055 59.12 257.919 59.12C256.511 59.12 255.273 59.4613 254.207 60.144C253.14 60.8267 252.319 61.7973 251.743 63.056C251.167 64.2933 250.879 65.7547 250.879 67.44C250.879 69.296 251.177 70.928 251.775 72.336C252.393 73.744 253.257 74.8427 254.367 75.632C255.476 76.4 256.756 76.784 258.207 76.784C259.657 76.784 260.82 76.3787 261.695 75.568C262.591 74.736 263.241 73.456 263.647 71.728L265.183 71.6C265.119 71.92 264.98 72.6347 264.767 73.744C264.553 74.832 264.404 75.856 264.319 76.816L264.127 77.104C264.127 77.1253 263.796 77.2533 263.135 77.488C262.495 77.7013 261.684 77.904 260.703 78.096C259.743 78.288 258.697 78.384 257.567 78.384ZM280.542 78.384C280.073 78.384 279.593 78.1813 279.102 77.776C278.611 77.3493 278.163 76.7733 277.758 76.048L275.07 71.344H272.99L272.926 74.768C272.926 75.3867 272.969 75.8347 273.054 76.112C273.139 76.368 273.299 76.5387 273.534 76.624C273.79 76.7093 274.217 76.7627 274.814 76.784L274.878 76.88L274.622 78.096C274.366 78.0747 273.897 78.0533 273.214 78.032C272.553 78.032 271.881 78.032 271.198 78.032C270.537 78.032 269.961 78.0427 269.47 78.064C268.979 78.0853 268.649 78.1067 268.478 78.128L268.702 76.816C269.491 76.7093 270.014 76.528 270.27 76.272C270.526 76.016 270.654 75.536 270.654 74.832L270.686 64.624C270.686 64.112 270.622 63.7707 270.494 63.6C270.366 63.408 270.121 63.312 269.758 63.312L268.862 63.344L268.766 63.216L268.958 62C269.171 62 269.577 62.0107 270.174 62.032C270.771 62.0533 271.369 62.064 271.966 62.064C272.585 62.064 273.246 62.0533 273.95 62.032C274.654 61.9893 275.134 61.968 275.39 61.968C277.118 61.968 278.473 62.3307 279.454 63.056C280.435 63.76 280.926 64.7413 280.926 66C280.926 66.9813 280.595 67.888 279.934 68.72C279.273 69.552 278.345 70.2347 277.15 70.768L279.87 74.864C280.382 75.632 280.873 76.176 281.342 76.496C281.811 76.816 282.377 76.976 283.038 76.976L283.166 77.136L283.006 78.128L280.542 78.384ZM275.646 69.936C276.051 69.7653 276.403 69.6053 276.702 69.456C277.022 69.2853 277.374 68.944 277.758 68.432C278.142 67.92 278.334 67.2587 278.334 66.448C278.334 64.3787 276.809 63.344 273.758 63.344C273.587 63.344 273.47 63.3867 273.406 63.472C273.342 63.536 273.31 63.6853 273.31 63.92C273.139 66.5227 273.054 68.4427 273.054 69.68L275.646 69.936ZM285.576 76.912C286.365 76.8267 286.898 76.6347 287.176 76.336C287.453 76.0373 287.592 75.5253 287.592 74.8L287.624 64.656C287.624 64.1227 287.56 63.7707 287.432 63.6C287.304 63.408 287.048 63.312 286.664 63.312L285.799 63.344L285.736 63.216L285.928 62C286.184 62 286.685 62.0107 287.432 62.032C288.178 62.0533 288.989 62.064 289.864 62.064C293.426 62.064 296.061 61.968 297.768 61.776L297.864 61.936C297.821 62.1707 297.725 62.704 297.576 63.536C297.426 64.368 297.32 65.264 297.256 66.224L295.72 66.352C295.72 66.2667 295.73 66.128 295.752 65.936C295.773 65.7227 295.784 65.5093 295.784 65.296C295.784 64.7413 295.698 64.3573 295.528 64.144C295.378 63.9093 295.048 63.76 294.536 63.696C294.045 63.6107 293.181 63.568 291.944 63.568C291.368 63.568 290.973 63.5893 290.76 63.632C290.546 63.6533 290.408 63.728 290.344 63.856C290.28 63.9627 290.237 64.176 290.216 64.496L290.024 69.04L292.648 69.072C293.032 69.072 293.597 69.04 294.344 68.976C295.09 68.8907 295.581 68.8373 295.816 68.816L295.944 68.976L295.56 70.64C295.325 70.64 294.856 70.6293 294.152 70.608C293.469 70.5867 292.744 70.576 291.976 70.576C291.378 70.576 290.706 70.6293 289.96 70.736C289.896 72.3573 289.864 73.8187 289.864 75.12C289.864 75.6107 289.896 75.952 289.96 76.144C290.045 76.336 290.216 76.464 290.472 76.528C290.749 76.592 291.197 76.624 291.816 76.624C293.202 76.624 294.194 76.56 294.792 76.432C295.389 76.304 295.805 76.048 296.04 75.664C296.296 75.2587 296.498 74.576 296.648 73.616L298.056 73.488L298.184 73.648C298.12 73.8827 298.002 74.4373 297.832 75.312C297.682 76.1653 297.565 77.0613 297.48 78L297.288 78.16C296.712 78.1387 295.517 78.1067 293.704 78.064C291.89 78.0213 290.418 78 289.288 78C288.413 78 287.602 78.032 286.856 78.096C286.109 78.1813 285.629 78.2347 285.416 78.256L285.576 76.912ZM308.93 78.064L309.026 76.912C309.922 76.848 310.519 76.752 310.818 76.624C311.138 76.496 311.298 76.2827 311.298 75.984C311.298 75.6427 311.223 75.28 311.074 74.896L310.306 72.432C309.879 72.4107 308.994 72.4 307.65 72.4C307.031 72.4 306.114 72.464 304.898 72.592L304.002 74.96C303.852 75.4507 303.778 75.7493 303.778 75.856C303.778 76.1973 303.895 76.4427 304.13 76.592C304.364 76.7413 304.748 76.816 305.282 76.816H306.658L306.754 76.944L306.562 78.16C306.348 78.1387 305.858 78.1067 305.09 78.064C304.343 78.0213 303.607 78 302.882 78C302.199 78 301.58 78.0107 301.026 78.032C300.492 78.0533 300.13 78.064 299.938 78.064L300.13 76.752C300.599 76.688 300.972 76.528 301.25 76.272C301.527 75.9947 301.804 75.536 302.082 74.896L307.106 62.192L309.378 61.776L309.602 61.808C309.602 61.8933 310.082 63.5787 311.042 66.864C312.023 70.1493 312.898 72.8693 313.666 75.024C313.879 75.6427 314.146 76.08 314.466 76.336C314.807 76.5707 315.34 76.72 316.066 76.784L316.13 76.912L315.97 78.064C315.756 78.064 315.362 78.0533 314.786 78.032C314.21 78.0107 313.634 78 313.058 78C312.183 78 311.351 78.032 310.562 78.096C309.772 78.16 309.26 78.2027 309.026 78.224L308.93 78.064ZM307.586 71.088C308.332 71.088 309.111 71.0453 309.922 70.96L307.97 64.752H307.746L305.41 71.088H307.586ZM326.842 78.448C324.687 72.6027 323.077 68.3253 322.01 65.616H321.85C321.765 66.64 321.605 68.5493 321.37 71.344C321.157 74.1387 321.05 75.6747 321.05 75.952C321.05 76.2293 321.114 76.432 321.242 76.56C321.37 76.6667 321.583 76.72 321.882 76.72H322.906L322.97 76.816L322.746 78.096C322.554 78.096 322.181 78.0747 321.626 78.032C321.093 78.0107 320.559 78 320.026 78C319.599 78 319.141 78.0213 318.65 78.064C318.159 78.128 317.839 78.1707 317.69 78.192L317.818 76.88C318.373 76.816 318.767 76.656 319.002 76.4C319.237 76.1227 319.397 75.6533 319.482 74.992C319.653 73.5413 319.877 71.504 320.154 68.88C320.453 66.256 320.602 64.784 320.602 64.464C320.602 64.0373 320.431 63.728 320.09 63.536C319.77 63.3227 319.205 63.1947 318.394 63.152L318.298 62.992L318.522 61.936C318.757 61.9573 319.173 61.9893 319.77 62.032C320.367 62.0533 320.943 62.064 321.498 62.064C321.967 62.064 322.394 62.0533 322.778 62.032C323.183 62.0107 323.45 61.9893 323.578 61.968C324.218 63.952 324.837 65.8187 325.434 67.568C326.053 69.296 326.554 70.6827 326.938 71.728C327.343 72.752 327.599 73.392 327.706 73.648H327.866C328.101 73.0507 328.623 71.6533 329.434 69.456C330.266 67.2587 331.162 64.784 332.122 62.032C332.25 62.0107 332.41 62.0107 332.602 62.032C332.815 62.032 333.018 62.032 333.21 62.032C333.445 62.0533 333.786 62.064 334.234 62.064C334.575 62.064 335.066 62.0427 335.706 62C336.367 61.9573 336.805 61.9253 337.018 61.904L337.082 62L336.922 63.12C336.175 63.2053 335.653 63.3547 335.354 63.568C335.055 63.76 334.906 64.0693 334.906 64.496C334.906 64.9227 334.981 66.2773 335.13 68.56C335.279 70.8427 335.429 72.784 335.578 74.384C335.685 75.344 335.823 75.9733 335.994 76.272C336.165 76.5707 336.453 76.72 336.858 76.72L337.594 76.688L337.658 76.784L337.434 78.064C337.263 78.064 336.933 78.0533 336.442 78.032C335.951 78.0107 335.429 78 334.874 78C334.319 78 333.69 78.032 332.986 78.096C332.282 78.16 331.909 78.192 331.866 78.192L331.994 76.88C332.549 76.816 332.943 76.688 333.178 76.496C333.413 76.304 333.53 76.016 333.53 75.632C333.53 75.248 333.413 73.7227 333.178 71.056C332.965 68.3893 332.815 66.576 332.73 65.616H332.57C331.311 68.8373 329.711 73.0507 327.77 78.256L326.842 78.448ZM347.709 76.784C348.647 76.6133 349.266 76.368 349.565 76.048C349.863 75.7067 350.013 75.0773 350.013 74.16L350.045 60.72C350.045 60.0373 349.959 59.5787 349.789 59.344C349.639 59.1093 349.33 58.992 348.861 58.992C348.647 58.992 348.434 59.0027 348.221 59.024C348.007 59.0453 347.858 59.056 347.773 59.056L347.709 58.928L347.933 57.52C348.189 57.5413 348.669 57.5627 349.373 57.584C350.077 57.6053 350.781 57.616 351.485 57.616C352.146 57.616 352.893 57.6053 353.725 57.584C354.578 57.5413 355.175 57.5093 355.517 57.488C357.735 57.488 359.431 57.9787 360.605 58.96C361.778 59.9413 362.365 61.3493 362.365 63.184C362.365 64.3787 362.013 65.52 361.309 66.608C360.626 67.6747 359.719 68.5387 358.589 69.2C357.458 69.8613 356.274 70.192 355.037 70.192H352.349L352.285 73.328C352.285 74.352 352.317 75.088 352.381 75.536C352.445 75.9627 352.562 76.2507 352.733 76.4C352.925 76.528 353.245 76.592 353.693 76.592C354.055 76.592 354.397 76.5813 354.717 76.56C355.058 76.5387 355.293 76.5173 355.421 76.496L355.485 76.624L355.197 78.096C354.983 78.0747 354.589 78.0533 354.013 78.032C353.458 78.0107 352.871 78 352.253 78C351.399 78 350.397 78.032 349.245 78.096C348.114 78.16 347.527 78.2133 347.485 78.256L347.709 76.784ZM355.805 68.784C357.085 68.5707 358.045 68.048 358.685 67.216C359.346 66.384 359.677 65.2427 359.677 63.792C359.677 62.1493 359.186 60.9547 358.205 60.208C357.245 59.44 355.73 59.056 353.661 59.056C353.277 59.056 353.042 59.0773 352.957 59.12C352.871 59.1627 352.818 59.2907 352.797 59.504C352.605 62.2133 352.477 65.1467 352.413 68.304L355.805 68.784ZM365.238 76.912C365.92 76.8053 366.379 76.6133 366.614 76.336C366.87 76.0373 366.998 75.5253 366.998 74.8L367.03 64.656C367.03 64.1227 366.966 63.7707 366.838 63.6C366.71 63.408 366.454 63.312 366.07 63.312L365.206 63.344L365.11 63.216L365.302 62C365.408 62 365.728 62.0107 366.262 62.032C366.795 62.0533 367.51 62.064 368.406 62.064C368.875 62.064 369.451 62.032 370.134 61.968C370.838 61.904 371.296 61.8613 371.51 61.84L371.382 63.184C370.806 63.248 370.4 63.3547 370.166 63.504C369.931 63.632 369.792 63.8027 369.75 64.016C369.707 64.2293 369.654 64.6667 369.59 65.328C369.376 68.1867 369.27 71.3547 369.27 74.832C369.27 75.3653 369.312 75.76 369.398 76.016C369.504 76.2507 369.696 76.4107 369.974 76.496C370.272 76.5813 370.731 76.624 371.35 76.624C372.374 76.624 373.12 76.5387 373.59 76.368C374.08 76.1973 374.443 75.8667 374.678 75.376C374.934 74.864 375.158 74.064 375.35 72.976L376.758 72.816L376.854 73.008C376.811 73.2853 376.704 73.9253 376.534 74.928C376.384 75.9093 376.246 76.944 376.118 78.032L375.958 78.224C375.467 78.2027 374.422 78.16 372.822 78.096C371.243 78.032 369.91 78 368.822 78C367.968 78 367.168 78.032 366.422 78.096C365.696 78.1813 365.238 78.2347 365.046 78.256L365.238 76.912ZM387.055 78.064L387.151 76.912C388.047 76.848 388.644 76.752 388.943 76.624C389.263 76.496 389.423 76.2827 389.423 75.984C389.423 75.6427 389.348 75.28 389.199 74.896L388.431 72.432C388.004 72.4107 387.119 72.4 385.775 72.4C385.156 72.4 384.239 72.464 383.023 72.592L382.127 74.96C381.977 75.4507 381.903 75.7493 381.903 75.856C381.903 76.1973 382.02 76.4427 382.255 76.592C382.489 76.7413 382.873 76.816 383.407 76.816H384.783L384.879 76.944L384.687 78.16C384.473 78.1387 383.983 78.1067 383.215 78.064C382.468 78.0213 381.732 78 381.007 78C380.324 78 379.705 78.0107 379.151 78.032C378.617 78.0533 378.255 78.064 378.062 78.064L378.255 76.752C378.724 76.688 379.097 76.528 379.375 76.272C379.652 75.9947 379.929 75.536 380.207 74.896L385.231 62.192L387.503 61.776L387.727 61.808C387.727 61.8933 388.207 63.5787 389.167 66.864C390.148 70.1493 391.023 72.8693 391.791 75.024C392.004 75.6427 392.271 76.08 392.591 76.336C392.932 76.5707 393.465 76.72 394.191 76.784L394.255 76.912L394.095 78.064C393.881 78.064 393.487 78.0533 392.911 78.032C392.335 78.0107 391.759 78 391.183 78C390.308 78 389.476 78.032 388.687 78.096C387.897 78.16 387.385 78.2027 387.151 78.224L387.055 78.064ZM385.711 71.088C386.457 71.088 387.236 71.0453 388.047 70.96L386.095 64.752H385.871L383.535 71.088H385.711ZM403.215 78.288C400.804 78.288 398.895 77.5947 397.487 76.208C396.079 74.8213 395.375 72.9333 395.375 70.544C395.375 68.8587 395.759 67.3547 396.527 66.032C397.316 64.688 398.404 63.6427 399.791 62.896C401.199 62.1493 402.788 61.776 404.559 61.776C405.199 61.776 405.86 61.8187 406.543 61.904C407.247 61.9893 407.833 62.0853 408.303 62.192C408.793 62.2987 409.103 62.3627 409.231 62.384L409.359 62.576C409.337 62.6827 409.284 62.9387 409.199 63.344C409.113 63.728 409.017 64.24 408.911 64.88C408.804 65.52 408.729 66.2027 408.687 66.928L407.087 67.024C407.087 66.96 407.097 66.8107 407.119 66.576C407.14 66.3413 407.151 66.0747 407.151 65.776C407.151 64.2827 405.956 63.536 403.567 63.536C401.903 63.536 400.591 64.0907 399.631 65.2C398.671 66.288 398.191 67.792 398.191 69.712C398.191 71.8453 398.692 73.5413 399.695 74.8C400.719 76.0587 402.084 76.688 403.791 76.688C404.921 76.688 405.817 76.3893 406.479 75.792C407.161 75.1733 407.652 74.2133 407.951 72.912L409.551 72.784C409.487 73.04 409.369 73.616 409.199 74.512C409.049 75.408 408.943 76.2507 408.879 77.04L408.687 77.296C408.559 77.3387 408.249 77.4453 407.759 77.616C407.289 77.7653 406.649 77.9147 405.839 78.064C405.028 78.2133 404.153 78.288 403.215 78.288ZM413.013 76.912C413.802 76.8267 414.336 76.6347 414.613 76.336C414.89 76.0373 415.029 75.5253 415.029 74.8L415.061 64.656C415.061 64.1227 414.997 63.7707 414.869 63.6C414.741 63.408 414.485 63.312 414.101 63.312L413.237 63.344L413.173 63.216L413.365 62C413.621 62 414.122 62.0107 414.869 62.032C415.616 62.0533 416.426 62.064 417.301 62.064C420.864 62.064 423.498 61.968 425.205 61.776L425.301 61.936C425.258 62.1707 425.162 62.704 425.013 63.536C424.864 64.368 424.757 65.264 424.693 66.224L423.157 66.352C423.157 66.2667 423.168 66.128 423.189 65.936C423.21 65.7227 423.221 65.5093 423.221 65.296C423.221 64.7413 423.136 64.3573 422.965 64.144C422.816 63.9093 422.485 63.76 421.973 63.696C421.482 63.6107 420.618 63.568 419.381 63.568C418.805 63.568 418.41 63.5893 418.197 63.632C417.984 63.6533 417.845 63.728 417.781 63.856C417.717 63.9627 417.674 64.176 417.653 64.496L417.461 69.04L420.085 69.072C420.469 69.072 421.034 69.04 421.781 68.976C422.528 68.8907 423.018 68.8373 423.253 68.816L423.381 68.976L422.997 70.64C422.762 70.64 422.293 70.6293 421.589 70.608C420.906 70.5867 420.181 70.576 419.413 70.576C418.816 70.576 418.144 70.6293 417.397 70.736C417.333 72.3573 417.301 73.8187 417.301 75.12C417.301 75.6107 417.333 75.952 417.397 76.144C417.482 76.336 417.653 76.464 417.909 76.528C418.186 76.592 418.634 76.624 419.253 76.624C420.64 76.624 421.632 76.56 422.229 76.432C422.826 76.304 423.242 76.048 423.477 75.664C423.733 75.2587 423.936 74.576 424.085 73.616L425.493 73.488L425.621 73.648C425.557 73.8827 425.44 74.4373 425.269 75.312C425.12 76.1653 425.002 77.0613 424.917 78L424.725 78.16C424.149 78.1387 422.954 78.1067 421.141 78.064C419.328 78.0213 417.856 78 416.725 78C415.85 78 415.04 78.032 414.293 78.096C413.546 78.1813 413.066 78.2347 412.853 78.256L413.013 76.912Z\"\n                    fill=\"black\"/>\n            </svg>\n        </div>\n    );\n}","import React from \"react\";\nimport LogoContainer from \"../Containers/LogoContainer\";\n\n// Component responsible for rendering header component\nexport default function HeaderComponent() {\n    return (\n        <div className=\"align-items-center header-div logo-padding\">\n            <LogoContainer/>\n            <a href=\"/IceCreamPlace/#planAhead\" className=\"d-none d-md-block ml-auto\">\n                <button  className=\" simple-button rounded-pill font-alegreya\" style={{height: \"50px\", width: \"150px\"}}>\n                    Plan ahead\n                </button>\n            </a>\n            <a href=\"/IceCreamPlace/#pickATheme\" className=\"d-none d-md-block\">\n                <button className=\"inverted-button rounded-pill font-alegreya\" style={{height: \"50px\", marginLeft: \"20px\", width: \"150px\"}}>\n                    Themes\n                </button>\n            </a>\n        </div>\n    );\n}","import React from \"react\";\n\n// Displays the tile which is on the left side of story component\nexport default function StoryTitle({title}) {\n    return (\n        <div className=\"form-style my-auto\">\n            <p className=\"left-div-title\">{title}</p>\n        </div>\n    );\n}","import React from \"react\";\n\n// Container responsible of rendering the content passed to it\nexport default function StoryContent({subtitle1, subtitle2, para1, para2}) {\n    return (\n        <div className=\"row\">\n            <div className=\"col-12\">\n                <strong><p className=\"font-helvetica\">{subtitle1}</p></strong>\n            </div>\n            <div className=\"col-12\">\n                <p className=\"font-helvetica\">{para1}</p>\n            </div>\n            <div className=\"col-12\" style={{marginTop: \"20px\"}}>\n                <strong><p className=\"font-helvetica\">{subtitle2}</p></strong>\n            </div>\n            <div className=\"col-12\">\n                <p className=\"font-helvetica\">{para2}</p>\n            </div>\n        </div>\n    );\n}","import React from \"react\";\n\n// Displays the title \"div\" of the respective parent container\nexport default function TitleDivContainer({text, id}) {\n    return (\n        <div\n            id={id}\n            className=\"center-button rounded-pill mt-auto mx-auto d-flex justify-content-center m-0\"\n        >\n            <p className=\"font-amatic\">{text}</p>\n        </div>\n    );\n}","import React from \"react\";\nimport StoryTitle from \"../Containers/StoryTitle\";\nimport StoryContent from \"../Containers/StoryContent\";\nimport TitleDivContainer from \"../Containers/TitleDivContainer\";\n\n// This component is responsible for rendering \"divs\" that tells a descriptive story of what purpose this website serves\nexport default function StoryComponent({\n                                           story_title,\n                                           title,\n                                           subtitle1,\n                                           subtitle2,\n                                           para1,\n                                           para2\n}) {\n    return (\n        <div\n            className=\"container-fluid\"\n            style={{\n                backgroundColor: \"#FEFEFE\",\n                minHeight: \"400px\"}}>\n            <TitleDivContainer text={story_title}/>\n            <div className=\"row h-100 story-title-container\">\n                <div className=\"col-md-6 d-flex\" style={{paddingLeft: \"5px\"}}>\n                    <StoryTitle\n                        title={title}\n                    />\n                </div>\n                <div className=\"col-md-1 divider my-auto d-none d-md-block\"/>\n                <div className=\"col-md-5 container-defaults my-auto d-flex justify-content-center\">\n                    <StoryContent\n                        subtitle1={subtitle1}\n                        subtitle2={subtitle2}\n                        para1={para1}\n                        para2={para2}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n}","import React from \"react\";\n\n// Render themes and its respective properties\nexport default function ThemeIcon({\n                                      theme,\n                                      selectedIndex,\n                                      setSelectedIndex,\n                                  }) {\n    // Initial array of all the to map the number of month\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n        \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n    // extracts the month from start date\n    function getStartMonth() {\n        let start = theme.availability.start;\n        let startDate = new Date(start);\n\n        return monthNames[startDate.getMonth()].substr(0, 3);\n    }\n\n    // extracts the date from start date\n    function getStartDate() {\n        return (new Date(theme.availability.start)).getDate();\n    }\n\n    // extracts month from end date\n    function getEndMonth() {\n        let end = theme.availability.end;\n        let endDate = new Date(end);\n\n        return monthNames[endDate.getMonth()].substr(0, 3);\n    }\n\n    // extracts date drom the end date\n    function getEndDate() {\n        return (new Date(theme.availability.end)).getDate();\n    }\n\n    return (\n        <div\n            className=\"col-icons\"\n            id={theme.name}\n            style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                paddingTop: \"30px\",\n                paddingLeft: \"20px\"\n            }}>\n            {/*Theme button that displays svg*/}\n            <button\n                className={`row justify-content-center align-items-center rounded-circle mx-auto ${(selectedIndex === theme.index) ? \"theme-button-highlighted\" : \"theme-button\"}`}\n                style={{width: \"300px\", height: \"300px\"}}\n                onClick={() => setSelectedIndex(theme.index)}\n            >\n                <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\n                     width=\"70%\" height=\"100%\" viewBox=\"0 0 300 300\"\n                     style={{enableBackground: \"new 0 0 512 512\"}} display=\"block\">\n                    <g>\n                        <path\n                            d=\"M198.544 93.9268C197.114 86.7337 192.824 77.1137 180.691 70.2237C185.371 61.0805 185.458 51.4605 180.951 42.7068C176.834 34.82 169.771 28.7968 162.144 24.9837C155.861 21.7768 149.187 20.0868 143.554 20C141.951 20.0432 140.304 20.91 139.567 22.4268C138.831 23.9437 139.047 25.7637 140.131 27.0637C142.514 30.0105 144.291 32.7405 145.417 35.2537C145.504 35.4268 145.547 35.6005 145.634 35.7305C146.934 38.7637 147.281 41.4505 146.717 43.7473C146.631 44.1373 146.501 44.4842 146.327 44.8742C145.417 47.301 143.511 49.4673 140.911 51.4173C138.571 53.2373 135.754 54.9273 132.677 56.4873C128.691 58.5242 124.271 60.3873 120.111 62.1642L116.601 63.681C108.454 66.9742 106.114 71.9142 105.767 75.901C105.681 77.201 105.767 78.4579 105.941 79.4542C106.071 80.1042 106.201 80.7542 106.461 81.4042C107.197 83.9173 108.627 86.5173 110.577 89.1173C110.751 89.3342 110.924 89.5942 111.097 89.8105C120.587 102.031 141.344 114.424 160.367 121.704C162.447 122.484 164.484 123.221 166.477 123.871C174.321 126.514 181.644 128.117 187.451 128.334H187.624C188.794 128.334 189.921 127.857 190.744 126.991C191.307 126.427 191.827 125.734 192.391 124.911C193.041 124.001 193.647 122.961 194.254 121.834C197.894 114.943 200.581 104.11 198.544 93.9268ZM186.107 118.67C185.934 118.973 185.761 119.277 185.587 119.537C182.424 119.234 179.001 118.584 175.361 117.63C172.544 116.893 169.641 115.94 166.694 114.9C147.411 107.967 125.831 94.7932 117.771 84.3068C115.951 82.01 114.824 79.8868 114.477 77.98C114.391 77.5468 114.261 76.8532 114.521 76.0732C114.911 74.8163 116.167 73.2132 119.894 71.6963C119.937 71.6532 119.981 71.6532 119.981 71.6532L121.671 70.9163L123.534 70.1363C129.254 67.7095 135.061 65.2395 140.131 62.3795C146.284 58.8263 151.397 54.6663 153.954 49.2063C154.474 48.1232 154.864 46.9963 155.167 45.8263C155.644 43.8763 155.817 41.8832 155.6 39.8032C155.383 36.8132 154.43 33.6932 152.74 30.4432C154.17 30.92 155.557 31.4832 156.943 32.1763C163.183 35.0363 169.12 39.6732 172.543 45.5232C172.803 45.9132 173.02 46.3032 173.236 46.6932C176.703 53.41 176.4 60.3863 172.283 67.5363C172.023 68.0132 171.763 68.4895 171.46 68.9232C171.33 69.14 171.157 69.3563 171.027 69.5732C170.29 70.6132 170.074 71.9563 170.464 73.17C170.637 73.7768 170.897 74.2968 171.244 74.73C171.677 75.25 172.241 75.6832 172.847 75.9432C175.23 77.0263 177.354 78.1963 179.26 79.54C181.08 80.7968 182.64 82.1832 184.027 83.7C187.147 87.08 189.14 91.0668 190.05 95.6168C191.914 104.933 188.751 114.077 186.107 118.67Z\"\n                            fill=\"black\"/>\n                        <path\n                            d=\"M175.361 117.63C172.544 116.893 169.641 115.94 166.694 114.9C147.411 107.967 125.831 94.7932 117.771 84.3069C115.951 82.0101 114.824 79.8869 114.478 77.9801C114.391 77.5469 114.261 76.8532 114.521 76.0732C114.911 74.8164 116.168 73.2132 119.894 71.6964C119.937 71.6532 119.981 71.6532 119.981 71.6532L121.671 70.9164L123.534 70.1364C129.254 67.7096 135.061 65.2395 140.131 62.3795C146.284 58.8264 151.398 54.6664 153.954 49.2064C154.474 48.1233 154.864 46.9964 155.167 45.8264C155.644 43.8764 154.216 41.08 154 39C153.5 38 150.359 30.6865 152.5 30.0002C155.631 28.9966 167.007 36.4558 168.5 38C169.28 38.8231 173.306 43.59 174 44.5C176.21 47.4032 176 50 176 53C176.116 53.3617 176.459 58.1923 176.5 58.5C177 60.5 177 62.3795 175 64.5C174.627 64.8951 171.764 68.4901 171.461 68.9237C171.331 69.1406 171.158 69.3569 171.028 69.5737C170.291 70.6137 170.074 71.9569 170.464 73.1706C170.638 73.7774 170.898 74.2974 171.244 74.7306C171.678 75.2506 172.241 75.6838 172.848 75.9438C175.231 77.0269 177.354 78.1969 179.261 79.5406C184 82 189.196 89.0768 189.5 92.5C191 97 192 104.5 190 108.5C190.5 111 187.584 117.606 186 119.5C183.831 122.093 176.5 117.928 175.361 117.63Z\"\n                            fill={theme.color}/>\n                        <path\n                            d=\"M198.588 146.1C198.501 145.883 198.371 145.667 198.241 145.493C197.504 144.15 196.551 142.98 195.381 141.94C191.611 138.56 186.194 137 182.771 137C172.848 136.307 158.808 131.713 146.068 125.993C143.771 124.953 141.518 123.87 139.308 122.743C137.748 121.963 136.188 121.14 134.715 120.36C133.675 119.753 132.678 119.19 131.682 118.627C130.642 118.064 129.601 117.457 128.648 116.85C127.998 116.46 127.391 116.113 126.828 115.68C125.008 114.51 123.318 113.383 121.888 112.3C121.281 111.823 120.718 111.39 120.242 110.957C119.635 110.48 119.071 109.96 118.551 109.484C118.031 109.007 117.598 108.53 117.165 108.097C116.255 107.1 115.042 106.624 113.698 106.667C112.398 106.754 111.185 107.404 110.405 108.487C109.278 110.09 108.238 111.65 107.328 113.167C91.901 138.95 106.201 156.847 110.145 161.007L143.165 260.067L148.841 277.054C149.405 278.787 151.095 280 152.958 280C154.821 280 156.468 278.787 157.075 277.054L161.668 263.187L166.262 249.494L195.078 163L195.815 160.747C197.592 158.407 198.632 156.284 199.195 154.334C200.148 150.91 199.541 148.137 198.588 146.1ZM152.958 261.973L147.801 246.59L119.938 163H185.935L152.958 261.973ZM189.748 154.333H115.735C112.355 150.65 102.822 137.65 114.738 117.673C116.428 119.06 118.378 120.49 120.545 121.876C122.842 123.436 125.398 124.996 128.085 126.556C144.335 135.786 166.912 144.583 182.468 145.666C184.938 145.666 189.618 147.443 190.745 149.826C191.395 151.127 190.701 152.817 189.748 154.333Z\"\n                            fill=\"black\"/>\n                        <path\n                            d=\"M190 155L115 155.5C112.724 151.308 108.27 144.237 107.5 137.5C106.758 131.016 109.102 123.453 112.078 115C114.651 116.874 117.514 118.749 120.524 120.623C138.727 131.714 164.017 142.284 181.443 143.586C184.21 143.586 189.452 145.721 190.715 148.585C191.443 150.147 193 155 190 155Z\"\n                            fill={theme.color}/>\n                        <path d=\"M185.934 163L152.958 261.973L147.801 246.59L176.661 163H185.934Z\" fill=\"#F9A825\"/>\n                        <path d=\"M176.662 163L147.802 246.59L119.938 163H176.662Z\" fill=\"#FFC107\"/>\n                        <path\n                            d=\"M195.381 141.94C191.611 138.56 186.194 137 182.771 137C172.848 136.306 158.808 131.713 146.068 125.993C133.371 120.23 121.931 113.34 117.165 108.096C116.255 107.099 115.041 106.623 113.698 106.666C112.398 106.753 111.185 107.403 110.405 108.486C109.278 110.089 108.238 111.649 107.328 113.166C105.595 111.563 104.468 109.223 104.468 106.666C104.468 98.4759 107.285 91.6291 111.098 89.8091C125.658 108.529 166.478 127.596 187.451 128.332H187.624C188.794 128.332 189.921 127.855 190.744 126.989C191.307 126.426 191.827 125.732 192.391 124.909C193.951 127.25 195.121 133.836 195.381 141.94Z\"\n                            fill=\"#ECECEC\"/>\n                        <path\n                            d=\"M153.322 206.728C151.779 206.728 150.284 205.9 149.5 204.444L135.317 178.049C134.186 175.943 134.975 173.313 137.085 172.182C139.191 171.043 141.817 171.84 142.952 173.95L157.136 200.345C158.266 202.451 157.478 205.081 155.367 206.212C154.717 206.563 154.015 206.728 153.322 206.728Z\"\n                            fill=\"#F9A825\"/>\n                        <path\n                            d=\"M140.322 198.06C138.909 198.06 137.522 197.371 136.69 196.097C135.382 194.095 135.945 191.409 137.947 190.1L158.431 176.705C160.433 175.397 163.119 175.956 164.428 177.962C165.737 179.964 165.173 182.651 163.171 183.96L142.688 197.354C141.955 197.831 141.132 198.06 140.322 198.06Z\"\n                            fill=\"#F9A825\"/>\n                    </g>\n                    <defs>\n                        <clipPath id=\"clip0\">\n                            <rect width=\"100%\" height=\"100%\" fill=\"white\" transform=\"translate(20 20)\"/>\n                        </clipPath>\n                    </defs>\n                </svg>\n            </button>\n            {/*Div that describes theme name as well as between what period it is available*/}\n            <div\n                className=\"row d-flex font-amatic\"\n                style={{\n                    marginTop: \"10px\",\n                    flex:\"1\"\n                }}>\n                <div className=\"w-100\">\n                    <h2 className=\"text-center\">{theme.name}</h2>\n                </div>\n                <div className=\"w-100\">\n                    <h2 className=\"text-center\">{getStartDate()}{\" \"}{getStartMonth()}{\" - \"}{getEndDate()}{\" \"}{getEndMonth()}</h2>\n                </div>\n            </div>\n        </div>\n    );\n}","import React from \"react\";\nimport ThemeIcon from \"../Containers/ThemeIcon\";\nimport TitleDivContainer from \"../Containers/TitleDivContainer\";\nimport {Link} from \"react-router-dom\";\n\n// This component is responsible of rendering all the themes\nexport default function ThemeComponent({\n                                           selectedIndex,\n                                           setSelectedIndex,\n                                           all_themes,\n                                           date,\n                                           content\n                                       }) {\n    function getCurrentTheme(){\n        return all_themes[selectedIndex];\n    }\n\n    function handleClick(e) {\n        if (date === undefined) {\n            e.preventDefault();\n            showMessage(\"Please select a date\");\n        } else if (content === undefined) {\n            e.preventDefault();\n            showMessage(\"You are required to put in content\");\n        }\n    }\n\n    function showMessage(text) {\n        let message = document.getElementById(\"snackbar\");\n        message.innerHTML = text;\n        message.className = \"show\";\n        setTimeout(function () {\n            message.className = message.className.replace(\"show\", \"\");\n        }, 3000);\n    }\n\n    return (\n        <div className=\"container-fluid theme-div p-0\">\n            <TitleDivContainer\n                text={\"pick a theme\"}\n                style={{zIndex: 9999}}\n                id={\"pickATheme\"}\n            />\n            <div\n                className=\"row p-5\"\n                style={{\n                    backgroundColor: getCurrentTheme().color,\n                    color: getCurrentTheme().colorSecondary,\n                    transition: \"0.3s ease-in-out\",\n                    marginTop: \"-75px\",\n                    marginRight: \"0\"\n                }}\n            >\n                {all_themes.map(\n                    x => (\n                        <ThemeIcon\n                            key={x.index}\n                            theme={x}\n                            setSelectedIndex={(index) => setSelectedIndex(index)}\n                            selectedIndex={selectedIndex}\n                        />\n                    )\n                )}\n                <div className=\" d-flex flex-row justify-content-center align-items-center mx-auto mt-5\">\n                    <Link to=\"/IceCreamPlace/output\">\n                        <button\n                            className=\"black-button rounded-pill font-alegreya\"\n                            style={{maxHeight: \"60px\"}} onClick={(e) => handleClick(e)}>\n                            Show Preview\n                        </button>\n                    </Link>\n                </div>\n            </div>\n        </div>\n    );\n}","import React from \"react\";\nimport {DatePicker} from \"react-nice-dates\";\nimport {enGB} from \"date-fns/locale\";\nimport {getDay} from \"date-fns\";\nimport TitleDivContainer from \"../Containers/TitleDivContainer\";\n\n// This component is the component responsible for rendering input fields\nexport default function CalendarComponent({\n                                              date,\n                                              content,\n                                              setParentContent,\n                                              setDate,\n                                              availableThemes\n                                          }) {\n    const modifiers = {\n        highlight: date => getDay(date) === 0 // Highlights Sundays\n    }\n\n    const modifiersClassNames = {\n        highlight: '-highlight'\n    }\n\n    // Gets the value\n    function getValue(e) {\n        return e.nativeEvent.target.value;\n    }\n\n    return (\n        <div className=\"container-fluid calendar-div\"\n             style={{\n                 paddingBottom: \"50px\"\n             }}\n        >\n            <TitleDivContainer\n                text={\"plan ahead\"}\n                id={\"planAhead\"}\n            />\n            <div className=\"row h-100 container-defaults\">\n                <div className=\"col-md-6 d-flex small-screen-defaults\">\n                    <form className=\"form-style\">\n                        <span className=\"my-span\">Pick a date</span>\n                        <DatePicker\n                            date={date}\n                            onDateChange={(val) =>setDate(val)}\n                            locale={enGB}\n                            modifiers={modifiers}\n                            modifiersClassNames={modifiersClassNames}\n                        >\n                            {({inputProps, focused}) => (\n                                <div className=\"md-form md-outline form-lg\">\n                                    <input\n                                        value={date}\n                                        style={{width: \"100%\", border: \"1px solid #c9bcb3\", minHeight: \"60px\"}}\n                                        className={'input' + (focused ? ' -focused' : '') + \" form-control form-control-lg\"}\n                                        {...inputProps}\n                                        placeholder=\"\"\n                                    />\n                                    <label htmlFor=\"form-lg\">DD/MM/YYYY</label>\n                                </div>\n                            )}\n                        </DatePicker>\n                        <span className=\"my-span\">Make a note</span>\n                        <div className=\"md-form md-outline\">\n                            <textarea\n                                onChange={e => setParentContent(getValue(e))}\n                                value={content}\n                                name=\"myTextArea\"\n                                id=\"myTextArea\"\n                                spellCheck=\"true\"\n                                rows=\"4\"\n                                className=\"md-textarea form-control\"\n                                style={{width: \"100%\", border: \"1px solid #c9bcb3\"}}\n                            />\n                            <label htmlFor=\"myTextArea\">What's in your mind...</label>\n                        </div>\n                    </form>\n                </div>\n                <div className=\"col-md-1 calendar-divider my-auto d-none d-md-block\">\n                </div>\n                <div className=\"col-md-5 container-defaults d-flex flex-column justify-content-start align-items-between\">\n                    <div className=\"d-flex flex-column justify-content-center align-items-center\">\n                        <div className=\"col-10 text-center\">\n                            <span className=\"my-span text-center\">Ice-creams available</span>\n                        </div>\n                        <div className=\"col-10 mt-3\">\n                            <div className=\"list-group\">\n                                {/*Maps the themes available on the date selected*/}\n                                {availableThemes.map(x => {\n                                    return (\n                                        <a className=\"list-group-item list-group-item-action font-helvetica text-center mb-1\" key={x.name} href={`#${x.name}`}>\n                                           <h3>\n                                               {x.name}\n                                           </h3>\n                                        </a>\n                                        )\n                                    })\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            {/*This div is responsible for sending appropriate messages to user*/}\n            <div id=\"snackbar\"/>\n        </div>\n    );\n}","import React from \"react\";\n\n// svg for heart\nexport default function HeartContainer({height, width}) {\n    return (\n        <div style={{height: `${height}px`, width: `${width}px`}}>\n            <svg version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\n                 viewBox=\"0 0 391.837 391.837\" style={{enableBackground: \"new 0 0 391.837 391.837\"}}>\n                <g>\n                    <path style={{fill: \"#D7443E\"}} d=\"M285.257,35.528c58.743,0.286,106.294,47.836,106.58,106.58\n\t\t                c0,107.624-195.918,214.204-195.918,214.204S0,248.165,0,142.108c0-58.862,47.717-106.58,106.58-106.58l0,0\n\t\t                c36.032-0.281,69.718,17.842,89.339,48.065C215.674,53.517,249.273,35.441,285.257,35.528z\"/>\n                </g>\n                <g>\n                </g>\n                <g>\n                </g>\n                <g>\n                </g>\n                <g>\n                </g>\n                <g>\n                </g>\n                <g>\n                </g>\n                <g>\n                </g>\n                <g>\n                </g>\n                <g>\n                </g>\n                <g>\n                </g>\n                <g>\n                </g>\n                <g>\n                </g>\n                <g>\n                </g>\n                <g>\n                </g>\n                <g>\n                </g>\n            </svg>\n        </div>\n    );\n}","import React from \"react\";\n\n// Svg for github\nexport default function GitContainer({height, width, url}) {\n    return (\n        <a\n            href={`${url}`}\n        >\n            <button\n                style={{all: \"unset\"}}\n            >\n                <svg width={width} height={height} viewBox=\"0 0 1024 1024\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M8 0C3.58 0 0 3.58 0 8C0 11.54 2.29 14.53 5.47 15.59C5.87 15.66 6.02 15.42 6.02 15.21C6.02 15.02 6.01 14.39 6.01 13.72C4 14.09 3.48 13.23 3.32 12.78C3.23 12.55 2.84 11.84 2.5 11.65C2.22 11.5 1.82 11.13 2.49 11.12C3.12 11.11 3.57 11.7 3.72 11.94C4.44 13.15 5.59 12.81 6.05 12.6C6.12 12.08 6.33 11.73 6.56 11.53C4.78 11.33 2.92 10.64 2.92 7.58C2.92 6.71 3.23 5.99 3.74 5.43C3.66 5.23 3.38 4.41 3.82 3.31C3.82 3.31 4.49 3.1 6.02 4.13C6.66 3.95 7.34 3.86 8.02 3.86C8.7 3.86 9.38 3.95 10.02 4.13C11.55 3.09 12.22 3.31 12.22 3.31C12.66 4.41 12.38 5.23 12.3 5.43C12.81 5.99 13.12 6.7 13.12 7.58C13.12 10.65 11.25 11.33 9.47 11.53C9.76 11.78 10.01 12.26 10.01 13.01C10.01 14.08 10 14.94 10 15.21C10 15.42 10.15 15.67 10.55 15.59C13.71 14.53 16 11.53 16 8C16 3.58 12.42 0 8 0Z\" transform=\"scale(64)\" fill=\"#1B1F23\"/>\n                </svg>\n            </button>\n        </a>\n    );\n}","import React from \"react\";\nimport LogoContainer from \"../Containers/LogoContainer\";\nimport HeartContainer from \"../Containers/HeartContainer\";\nimport GitContainer from \"../Containers/GitContainer\";\n\n// This component responsible for rendering Footer container\nexport default function FooterComponent() {\n    return (\n        <div className=\"d-flex align-items-center footer-div justify-content-around\"\n            style={{fontSize: \"4vmin\"}}\n        >\n            <div className=\"footer-content\">\n                <div style={{\n                    fontFamily: \"'Helvetica Neue', Arial, sans-serif\",\n                    fontWeight: \"300\"\n                }}>Developed with </div>\n            </div>\n            <HeartContainer\n\n                height={60}\n                width={60}\n            />\n            <div className=\"footer-content\">\n                <div style={{\n                    fontFamily: \"'Helvetica Neue', Arial, sans-serif\",\n\n                    // width: \"100%\",\n                    fontWeight: \"300\"\n                }}>for </div>\n            </div>\n            <div className=\"logo-container\">\n                <LogoContainer/>\n            </div>\n            <div className=\"footer-content\">\n                <div style={{\n                    fontFamily: \"'Helvetica Neue', Arial, sans-serif\",\n\n                    // width: \"100%\",\n                    fontWeight: \"300\"\n                }}>by </div>\n            </div>\n            <GitContainer\n                url={\"https://www.github.com/dhruvikpatel-coder/IceCreamPlace\"}\n                height={60}\n                width={60}\n            />\n            <div className=\"footer-content\">\n                <a\n                    href=\"https://www.github.com/dhruvikpatel-coder/IceCreamPlace\"\n                >\n                    <div style={{\n                        fontFamily: \"'Helvetica Neue', Arial, sans-serif\",\n                        color: \"black\",\n                        // width: \"100%\",\n                        fontWeight: \"300\"\n                    }}>@dhruvikpatel-coder </div>\n                </a>\n            </div>\n        </div>\n    );\n}","import React from \"react\";\nimport HeaderComponent from \"./HeaderComponent\";\nimport StoryComponent from \"./StoryComponent\";\nimport ThemeComponent from \"./ThemeComponent\";\nimport CalendarComponent from \"./CalendarComponent\";\nimport FooterComponent from \"./FooterComponent\";\n\n// This component renders the input page which is basically the home page of our website\nexport default function InputComponent({\n                                           setSelectedIndex,\n                                           selectedIndex,\n                                           date,\n                                           content,\n                                           setParentDate,\n                                           setContent,\n                                           all_themes,\n                                           availableThemes\n                                       }) {\n    return (\n        <div>\n            {/*Calls header*/}\n            <HeaderComponent/>\n            {/*The image div to create parallax effect*/}\n            <div className=\"parallax\"/>\n            {/*Calls Story component*/}\n            <StoryComponent\n                title={\"New forms of Pure Happiness\"}\n                subtitle1={\"We are proud of all our products...\"}\n                subtitle2={\"We think you’ll love them!\"}\n                para1={\"... and super excited to add new ones to the family! Only here for a limited period of time, \" +\n                \"capture them in your memories!\"}\n                para2={\"Our ice cream experts can’t wait to hear about your experience!\"}\n                story_title={\"specials\"}\n            />\n            {/*calls calendar component*/}\n            <CalendarComponent\n                date={date}\n                content={content}\n                setDate={(val) => setParentDate(val)}\n                setParentContent={(val) => setContent(val)}\n                availableThemes={availableThemes}\n            />\n            {/*Calls theme component*/}\n            <ThemeComponent\n                date={date}\n                content={content}\n                selectedIndex={selectedIndex}\n                setSelectedIndex={(index) => setSelectedIndex(index)}\n                all_themes={all_themes}\n            />\n            <FooterComponent/>\n        </div>\n    );\n}","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {format} from \"date-fns\";\nimport {enGB} from \"date-fns/locale\";\nimport TitleDivContainer from \"../Containers/TitleDivContainer\";\n\n// This component is responsible of showing the preview of output based on the theme selected.\nexport default function PreviewComponent({\n                                             date,\n                                             content,\n                                             selectedTheme,\n                                             setParentDate,\n                                             setParentContent\n                                        }) {\n    // Clears the input fields back button is pressed\n    function clearChoice(){\n        setParentContent();\n        setParentDate();\n    }\n\n    return (\n        <div className=\"container-fluid calendar-div d-flex flex-column align-items-center justify-content-center\"\n             style={{\n                 backgroundColor: selectedTheme.color,\n                 color: selectedTheme.colorSecondary\n        }}>\n            <TitleDivContainer\n                text={\"plan ahead\"}\n                id={\"planAhead\"}\n            />\n            <div className=\"row h-100 d-flex flex-row align-items-center justify-content-center w-100\">\n                <div className=\"col-md-6 container-defaults d-flex justify-content-center\">\n                    <form className=\"form-style\">\n                        <span\n                            className=\"my-span\"\n                            style={{\n                                color: selectedTheme.colorSecondary\n                            }}>Your date</span>\n                        <h1>{date && format(date, 'dd MMM yyyy', {locale: enGB})}</h1>\n                        <span\n                            className=\"my-span\"\n                            style={{\n                                color: selectedTheme.colorSecondary\n                            }}>Note before your visit</span>\n                        <h1>{content}</h1>\n                    </form>\n                </div>\n                <div className=\"col-md-1 calendar-divider h-100 d-none d-md-block\">\n                </div>\n                <div className=\"col-md-5 container-defaults d-flex\">\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <h1 style={{\n                                fontFamily: \"'Helvetica Neue', Arial, sans-serif\",\n                                fontWeight: \"bolder\"\n                            }}>Selected Theme:</h1>\n                            <h1>{selectedTheme.name}</h1>\n                        </div>\n\n                    </div>\n                </div>\n                <div\n                    className=\"mx-auto\"\n                    style={{\n                        marginTop: \"25px\",\n                        marginBottom: \"40px\"\n                    }}\n                >\n                    <Link to=\"/IceCreamPlace\">\n                        <button\n                            className=\"black-button rounded-pill font-alegreya\"\n                            style={{\n                                height: \"50px\",\n                                minWidth: \"150px\"\n                            }}\n                            onClick={() => clearChoice()}\n                        >\n                            Go Back\n                        </button>\n                    </Link>\n                </div>\n            </div>\n        </div>\n    );\n}","import React from \"react\";\nimport LogoContainer from \"../Containers/LogoContainer\";\n\n// Component responsible for rendering header component\nexport default function OutputHeaderComponent() {\n    return (\n        <div className=\"align-items-center header-div logo-padding\">\n            <LogoContainer/>\n        </div>\n    );\n}","import React from \"react\";\nimport StoryComponent from \"./StoryComponent\";\nimport FooterComponent from \"./FooterComponent\";\nimport PreviewComponent from \"./PreviewComponent\";\nimport OutputHeaderComponent from \"./OutputHeaderComponent\";\nimport {Redirect} from \"react-router-dom\";\n\n// This component renders the output page which is responsible for presenting the output according to theme selected\nexport default function OutputComponent(props) {\n    if (props.content === undefined) {\n        return <Redirect to={\"/MyReminder\"} />\n    }\n\n    return (\n        <div>\n            {/*Calls header component*/}\n            <OutputHeaderComponent/>\n            {/*Calls story component*/}\n            <StoryComponent\n                title={\"New forms of Pure Happiness\"}\n                subtitle1={\"We are proud of all our products...\"}\n                subtitle2={\"We think you’ll love them!\"}\n                para1={\"... and super excited to add new ones to the family! Only here for a limited period of time, \" +\n                \"capture them in your memories!\"}\n                para2={\"Our ice cream experts can’t wait to hear about your experience!\"}\n                story_title={\"specials\"}\n            />\n            {/*Calls preview component*/}\n            <PreviewComponent\n                date={props.date}\n                content={props.content}\n                setParentDate={props.setParentDate}\n                setParentContent={props.setParentContent}\n                selectedTheme={props.selectedTheme}\n            />\n            {/*Calls footer component*/}\n            <FooterComponent />\n        </div>\n    );\n}","import React, {useState} from \"react\";\nimport './App.css';\nimport './snackbar.css';\nimport {BrowserRouter as Router, Route, Switch, Redirect} from \"react-router-dom\";\nimport InputComponent from \"./Components/InputComponent\";\nimport OutputComponent from \"./Components/OutputComponent\";\nimport 'react-nice-dates/build/style.css';\n\n// Theme class that binds all information about different themes including their availability\n// Availability in this context indicates what ice cream is available in the selected period of time\nclass Theme {\n    name; // Theme name\n    availability; // Between what time period is the theme available\n    color; // Color of the theme\n    colorSecondary; // Secondary color of the theme (it is required to giving a contrast to the page)\n    index; // represents index number of the theme\n\n    constructor(_obj) {\n        this.name = _obj.name || \"\";\n        this.availability = _obj.availability || {\n            start: (new Date()).toString(),\n            end: \"01/01/9999\"\n        };\n        this.color = _obj.color || \"#FFFFFF\";\n        this.index = _obj.index || 0;\n        this.colorSecondary = _obj.colorSecondary || \"#484848\";\n    }\n}\n\n// Filters and look of the themes available on selected date.\nfunction filterValidDates(themes, date) {\n    return themes.filter(x => {\n        let startDate = new Date(x.availability.start);\n        let endDate = new Date(x.availability.end);\n        let dateDate = new Date(date);\n        return dateDate && (startDate <= dateDate && dateDate <= endDate);\n    })\n}\n\nexport default function App() {\n    // The following state keeps track of date that a user selects, initial date will be today's date\n    let [date, setDate] = useState(new Date());\n    // The following state keeps track of the text user types in for text field\n    let [content, setContent] = useState();\n    // The following state keeps track of the index of theme selected and by default it is very first theme\n    let [currentIndex, setCurrentIndex] = useState(0);\n\n    // This is array of all available themes\n    let all_themes = [\n        new Theme(\n            {\n                name: \"Vanilla\",\n                availability: {\n                    start: \"01/01/2020\",\n                    end: \"12/31/2020\"\n                },\n                color: \"#FFFFFF\",\n                colorSecondary: \"#484848\",\n                index: 0\n            }),\n        new Theme(\n            {\n                name: \"Romantic Rose\",\n                availability: {\n                    start: \"01/01/2020\",\n                    end: \"06/02/2020\"\n                },\n                color: \"#FB3F26\",\n                colorSecondary: \"#fefefe\",\n                index: 1\n            }),\n        new Theme(\n            {\n                name: \"Cherry Chocolate\",\n                availability: {\n                    start: \"02/14/2020\",\n                    end: \"12/16/2020\"\n                },\n                color: \"#DE3163\",\n                colorSecondary: \"#fefefe\",\n                index: 2\n            }),\n        new Theme(\n            {\n                name: \"Red Velvet\",\n                availability: {\n                    start: \"12/15/2020\",\n                    end: \"02/02/2020\"\n                },\n                color: \"#9C0000\",\n                colorSecondary: \"#fefefe\",\n                index: 3\n            }),\n        new Theme(\n            {\n                name: \"Moe Matcha\",\n                availability: {\n                    start: \"02/24/2020\",\n                    end: \"07/09/2020\"\n                },\n                color: \"#C2F2D0\",\n                index: 4\n            }),\n        new Theme(\n            {\n                name: \"Berry Vanilla\",\n                availability: {\n                    start: \"06/10/2020\",\n                    end: \"01/10/2020\"\n                },\n                color: \"#FFCB85\",\n                index: 5\n            }),\n        new Theme(\n            {\n                name: \"Mint Oreo\",\n                availability: {\n                    start: \"12/15/2020\",\n                    end: \"01/10/2021\"\n                },\n                color: \"#27F2D9\",\n                colorSecondary: \"#fefefe\",\n                index: 6\n            }),\n        new Theme(\n            {\n                name: \"Tiger Orange\",\n                availability: {\n                    start: \"12/15/2020\",\n                    end: \"02/02/2020\"\n                },\n                color: \"#FD6A02\",\n                colorSecondary: \"#fefefe\",\n                index: 7\n            }),\n        new Theme(\n            {\n                name: \"Cookie Dough\",\n                availability: {\n                    start: \"03/18/2020\",\n                    end: \"05/20/2020\"\n                },\n                color: \"#BD8C61\",\n                colorSecondary: \"#fefefe\",\n                index: 8\n            })\n    ]\n\n    function getSelectedTheme() {\n        return all_themes[currentIndex];\n    }\n\n    return (\n        <Router>\n            {/*Switch routes by determining the paths*/}\n            <Switch>\n                <Route exact path=\"/IceCreamPlace\">\n                    <InputComponent\n                        selectedIndex={currentIndex}\n                        setSelectedIndex={(index) => setCurrentIndex(index)}\n                        date={date}\n                        content={content}\n                        setParentDate={(val) => setDate(val)}\n                        setContent={(val)=> setContent(val)}\n                        all_themes={all_themes}\n                        availableThemes={filterValidDates(all_themes, date)}\n                    />\n                </Route>\n                <Route exact path=\"/IceCreamPlace/output\">\n                    <OutputComponent\n                        selectedTheme={getSelectedTheme()}\n                        date={date}\n                        content={content}\n                        setParentDate={(val) =>setDate(val)}\n                        setParentContent={(val) =>setContent(val)}\n                        setSelectedIndex={(val) =>setCurrentIndex(val)}\n                    />\n                </Route>\n                {/*If the path entered does not match any of the paths above then redirect the user to home page*/}\n                <Route path=\"*\">\n                    <Redirect to=\"/IceCreamPlace\" />\n                </Route>\n            </Switch>\n        </Router>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}